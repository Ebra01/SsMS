{"version":3,"sources":["Components/Layout/Navbar.js","Components/Students/Students.js","Components/Students/Student.js","Components/Students/updateStudent.js","Components/Students/createStudent.js","Components/Links/studentsLinks.js","Components/Teachers/Teachers.js","Components/Teachers/Teacher.js","Components/Teachers/updateTeacher.js","Components/Teachers/createTeacher.js","Components/Links/teachersLinks.js","Components/Managers/Managers.js","Components/Managers/Manager.js","Components/Managers/updateManager.js","Components/Managers/createManager.js","Components/Links/managersLinks.js","Components/Classes/Classes.js","Components/Classes/Class.js","Components/Classes/createClasses.js","Components/Classes/updateClasses.js","Components/Links/classesLinks.js","Components/Schools/Schools.js","Components/Schools/School.js","Components/Schools/createSchools.js","Components/Schools/updateSchools.js","Components/Links/schoolsLinks.js","Components/Requests/Requests.js","Components/Requests/Request.js","Components/Requests/createRequests.js","Components/Requests/updateRequests.js","Components/Requests/respToRequest.js","Components/Links/requestsLinks.js","Components/Users/Login.js","Components/Users/Register.js","Components/Links/usersLinks.js","Components/SearchEngine/SearchE.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","links","localStorage","userInfo","className","to","onClick","e","preventDefault","logout","a","fetch","method","headers","then","resp","json","data","ok","removeFromLocalStore","refreshOnLogout","console","log","removeItem","window","location","reload","Students","props","flash","history","state","useState","students","setStudents","createStudent","setCreateStudent","error","message","setError","useEffect","students_list","map","student","key","id","full_name","email","phone","school","name","class","error_view","view","flash_view","type","pathname","Student","flashMessage","setStudent","user","setUser","updatePage","setUpdatePage","isDeleted","setIsDeleted","notFound","setNotFound","setFlash","useParams","updated","handleDeleteButton","deleteStudent","handleUpdateButton","user_id","getUser","flashRender","student_view","age","UpdateStudent","setState","isUpdated","setUpdated","handleChange","target","value","onSubmit","body","JSON","stringify","updateStudent","htmlFor","defaultValue","onChange","disabled","CreateStudent","schools","setSchools","classes","setClasses","currentSchool","setCurrentSchool","isEnabled","setEnabled","isCreated","setCreated","schoolsOption","classesOption","grade","created","required","maxLength","selected","StudentsLinks","exact","path","component","Teachers","teachers","setTeachers","createTeacher","setCreateTeacher","teachers_list","teacher","Teacher","setTeacher","deleteTeacher","teacher_view","UpdateTeacher","updateTeacher","CreateTeacher","TeachersLinks","Managers","managers","setManagers","createManager","setCreateManager","managers_list","manager","Manager","setManager","deleteManager","manager_view","UpdateManager","updateManager","CreateManager","ManagersLinks","Classes","createClasses","setCreateClasses","classes_list","loadTeacher","Class","setClass","class_view","length","deleteClass","CreateClass","createClass","UpdateClass","updateClass","ClassesLinks","Schools","createSchools","setCreateSchools","schools_list","School","setSchool","school_view","deleteSchool","CreateSchool","createSchool","UpdateSchool","updateSchool","SchoolsLinks","Requests","requests","setRequests","createRequests","setCreateRequests","requests_list","req","status","toUpperCase","date","Request","request","setRequest","reviewPage","setReviewPage","request_view","parse","request_type","switchType","requestRender","setRequestBody","deleteRequest","CreateRequest","choice","setChoice","createRequest","requestsOption","UpdateRequest","currentRequest","updateRequest","currentBody","ReviewRequest","respond","setRespond","isCompleted","setCompleted","reviewRequest","statusOptions","RequestsLinks","LoginUser","cred","setCred","current_user","errors","setErrors","fetched","setFetched","viewErrors","handleLogin","login","is_user","setItem","RegisterUser","registered","handleRegister","register","password","confirm_password","UsersLinks","SearchSystem","searchKey","search","searched","results","setResults","DidFetch","searchInput","loadAll","loadStudents","loadTeachers","loadManagers","loadClasses","loadClassTeacher","loadSchools","App","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7d407c7f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, NavLink, withRouter } from 'react-router-dom';\r\nimport '../../Styles/navbar.css'\r\n\r\nconst Navbar = () => {\r\n\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    const logout = async() => {\r\n      await fetch('/api/logout', {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          if (resp.ok) {\r\n            removeFromLocalStore();\r\n            refreshOnLogout();\r\n          } else {\r\n            console.log(data);\r\n          }\r\n        })\r\n      })\r\n    };\r\n\r\n    // Remove Current User on successful logout\r\n    const removeFromLocalStore = () => {\r\n      localStorage.removeItem(\"userInfo\");\r\n      localStorage.removeItem(\"DidFetch\");\r\n    };\r\n\r\n    // Refresh the page on successful logout\r\n    const refreshOnLogout = () => {\r\n      window.location.reload();\r\n    }\r\n\r\n    logout();\r\n  }\r\n\r\n  const links = localStorage.userInfo ? (\r\n    <ul className='right'>\r\n      <li><NavLink to='/students'>Students</NavLink></li>\r\n      <li><NavLink to='/teachers'>Teachers</NavLink></li>\r\n      <li><NavLink to='/managers'>Managers</NavLink></li>\r\n      <li><NavLink to='/classes'>Classes</NavLink></li>\r\n      <li><NavLink to='/schools'>Schools</NavLink></li>\r\n      <li><NavLink to='/requests'>Requests</NavLink></li>\r\n      <li><button onClick={handleLogout} className=\"ml-50 btn red lighten-1 black-text no-upper z-depth-1 waves-effect waves-light hoverable\">Logout</button></li>\r\n    </ul>\r\n  ) : (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/register\">Register</NavLink></li>\r\n      <li><NavLink to=\"/login\">Login</NavLink></li>\r\n    </ul>\r\n  )\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper blue darken-2\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">SMs</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default withRouter(Navbar)","import React, { useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const Students = (props) => {\r\n  const flash = props.history.location.state;\r\n  const [students, setStudents] = useState();\r\n  const [createStudent, setCreateStudent] = useState();\r\n  const [error, setError] = useState({\r\n    error: null,\r\n    message: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch('/api/students', {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      }\r\n    }).then(resp => {\r\n      if (resp.ok) {\r\n        resp.json().then(data => {\r\n          setStudents(data.students)\r\n        })\r\n      } else {\r\n        resp.json().then(data => {\r\n          setError({\r\n            error: data.error,\r\n            message: data.message \r\n          })\r\n        })\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n  const handleCreate = (e) => {\r\n    e.preventDefault();\r\n    setCreateStudent(true);\r\n  }\r\n\r\n  const flashRender = () => {\r\n    if (flash.type === 'SUCCESS_DELETION') {\r\n      return (\r\n        <div className=\"blue lighten-3 card-panel red-text text-darken-2\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    };\r\n    if (flash.type === 'SUCCESS_CREATION') {\r\n      return (\r\n        <div className=\"green lighten-3 card-panel blue-text text-darken-2\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    };\r\n    if (flash.type === 'NOT_FOUND') {\r\n      return (\r\n        <div className=\"yellow lighten-2 card-panel blue-text text-darken-3\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const students_list = students ? (students.map(student => {\r\n    return (\r\n      <div className=\"card grey lighten-3 z-depth-1 hoverable\" key={student.id}>\r\n        <Link to={'/students/' + student.id} className='black-text'>\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">\r\n              <h5>{student.full_name}</h5>\r\n            </span>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <p className=\"col\">Email: {student.email}</p>\r\n                <p className=\"col\">Phone: {student.phone}</p>\r\n              </div>\r\n              <div className=\"row\">\r\n                <p className=\"col\">School: {student.school.name}</p>\r\n                <p className=\"col\">Class: {student.class.class}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    )\r\n  })) : (   \r\n      <div className=\"progress\">\r\n        <div className=\"indeterminate\"/>\r\n      </div>\r\n    )\r\n\r\n   const error_view = (\r\n     <div className=\"card\">\r\n       <div className=\"card-content center\">\r\n          <div className=\"card-title\">{error.message} ({error.error})</div>\r\n       </div>\r\n     </div>\r\n   ) \r\n\r\n  const view = error.error ? (error_view) : (students_list)\r\n\r\n  const flash_view = flash ? (\r\n    flashRender()\r\n  ) : null;\r\n\r\n  if (createStudent) {\r\n    return <Redirect to={{\r\n      pathname: '/students/create'\r\n    }} />\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">\r\n        ...\r\n      </div>\r\n      <div className=\"container\">\r\n        {flash_view}\r\n      </div>\r\n      <div className=\"container\">\r\n      <button onClick={handleCreate} className=\"right waves-effect waves-light btn green blue hoverable\">Create</button>\r\n        <h4 className=''>Students:</h4>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-6\">\r\n            <div className=\"text-h\">...</div>\r\n            {view}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\n\r\nexport const Student = (props) => {\r\n  const flashMessage = props.history.location.state;\r\n  const [student, setStudent] = useState();\r\n  const [user, setUser] = useState();\r\n\r\n  const [updatePage, setUpdatePage] = useState();\r\n  const [isDeleted, setIsDeleted] = useState();\r\n  const [notFound, setNotFound] = useState();\r\n\r\n  const [flash, setFlash] = useState();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/students/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      }\r\n    }).then(resp => {\r\n      resp.json().then(data => {\r\n        if (resp.ok){\r\n          setStudent(data.student)\r\n        } else {\r\n          setFlash({\r\n            message: data.message,\r\n            updated: \"student\",\r\n            type: \"NOT_FOUND\"\r\n          });\r\n          setNotFound(true)\r\n        }\r\n      })\r\n    });\r\n  }, [id])\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n  const handleDeleteButton = (e) => {\r\n    e.preventDefault();\r\n    const deleteStudent = async() => {\r\n      await fetch(`/api/students/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          // console.log(data);\r\n          setFlash({\r\n            'message': data.student,\r\n            'type': 'SUCCESS_DELETION'\r\n          });\r\n          setIsDeleted(true);\r\n        })\r\n      })\r\n    };\r\n    deleteStudent();\r\n  }\r\n\r\n  const handleUpdateButton = (e) => {\r\n    e.preventDefault();\r\n    // console.log('Update');\r\n    setUpdatePage(true);\r\n  }\r\n\r\n  const flashRender = () => {\r\n    if (flashMessage.type === 'SUCCESS_UPDATION') {\r\n      return (\r\n        <div className=\"green lighten-3 card-panel blue-text text-darken-2\">\r\n          {flashMessage.message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  const userRender = () => {\r\n    const getUser = async() => {\r\n      await fetch(\"/api/users/\"+student.user_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          // console.log(data.user);\r\n          setUser(data.user);\r\n        })\r\n      })\r\n    }\r\n    getUser();\r\n  }\r\n\r\n  if (updatePage){\r\n    return <Redirect to={{\r\n      pathname: '/students/'+id+'/update',\r\n      state: student\r\n      }}/>\r\n  }\r\n\r\n  if (isDeleted){\r\n    return <Redirect to={{\r\n      pathname: '/students',\r\n      state: flash\r\n    }}/>\r\n  }\r\n\r\n  if (notFound){\r\n    return <Redirect to={{\r\n      pathname: '/students',\r\n      state: flash\r\n    }} />\r\n  }\r\n\r\n  if (student && student.user_id && !user) {\r\n    // console.log(student.user_id);\r\n    userRender();\r\n  }\r\n\r\n  const flash_view = flashMessage ? (\r\n    flashRender()\r\n  ) : null;\r\n\r\n  const student_view = student ? (\r\n      user ? (\r\n        <div className=\"card grey lighten-2 z-depth-2\">\r\n        <div className=\"card-content\">\r\n          <span className=\"title\">\r\n            <h5><strong>Full Name:</strong> {student.full_name}</h5>\r\n          </span>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">User Information:</span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>User ID:</th>\r\n                        <th>User Type:</th>\r\n                        <th>User Email:</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr>\r\n                        <td>#{user.id}</td>\r\n                        <td>{user.type}</td>\r\n                        <td>{user.email}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">Student Information:</span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Age:</th>\r\n                        <th>Email:</th>\r\n                        <th>Phone:</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr>\r\n                        <td>{student.age}</td>\r\n                        <td>{student.email}</td>\r\n                        <td>{student.phone}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"row\">\r\n                <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Student ID:</th>\r\n                        <th>School:</th>\r\n                        <th>Class:</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr>\r\n                        <td>#{student.id}</td>\r\n                        <td>{student.school.name}</td>\r\n                        <td>{student.class.class}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <div className=\"row\">\r\n            <div className=\"right\">\r\n              <div className=\"buttons\">\r\n                <button className=\"col waves-effect waves-light btn blue hoverable\" onClick={handleUpdateButton}>Update</button>\r\n                <button className=\"ml-5 col waves-effect waves-light btn modal-trigger red hoverable\" onClick={handleDeleteButton}>Delete</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h6 className=\"red-text lighten-3\">Deleting the Student will also Delete the associated User!</h6>\r\n        </div>\r\n      </div>\r\n      ) : (\r\n        <div className=\"card grey lighten-2 z-depth-2\">\r\n        <div className=\"card-content\">\r\n          <span className=\"title\">\r\n            <h5><strong>Full Name:</strong> {student.full_name}</h5>\r\n          </span>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">User Information:</span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">Student Information:</span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Age:</th>\r\n                        <th>Email:</th>\r\n                        <th>Phone:</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr>\r\n                        <td>{student.age}</td>\r\n                        <td>{student.email}</td>\r\n                        <td>{student.phone}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"row\">\r\n                <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Student ID:</th>\r\n                        <th>School:</th>\r\n                        <th>Class:</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr>\r\n                        <td>#{student.id}</td>\r\n                        <td>{student.school.name}</td>\r\n                        <td>{student.class.class}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <div className=\"row\">\r\n            <div className=\"right\">\r\n              <div className=\"buttons\">\r\n                <button className=\"col waves-effect waves-light btn blue hoverable\" onClick={handleUpdateButton}>Update</button>\r\n                <button className=\"ml-5 col waves-effect waves-light btn modal-trigger red hoverable\" onClick={handleDeleteButton}>Delete</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h6 className=\"red-text lighten-3\">Deleting the Student will also Delete the associated User!</h6>\r\n        </div>\r\n      </div>\r\n      )\r\n    ) : (\r\n      <div className=\"progress\">\r\n        <div className=\"indeterminate\"/>\r\n      </div>\r\n    )\r\n\r\n  return(\r\n    <div className=\"container\">\r\n    <div className=\"container text-h\">\r\n      ...\r\n    </div>\r\n      <div className=\"container\">\r\n        {flash_view}\r\n      </div>\r\n      <div className=\"container center\">\r\n        {student_view}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport const UpdateStudent = (props) => {\r\n  const student = props.history.location.state;\r\n  const [state, setState] = useState(student);\r\n  const [flash, setFlash] = useState();\r\n  const [isUpdated, setUpdated] = useState();\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n  \r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.value) {\r\n      setState({\r\n        ...state,\r\n        [e.target.id]: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const updateStudent = async() => {\r\n      await fetch('/api/students/'+student.id, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(state)\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          setFlash({\r\n            message: data.student,\r\n            updated: \"student\",\r\n            type: \"SUCCESS_UPDATION\"\r\n          })\r\n          setUpdated(true);\r\n        })\r\n      })\r\n    };\r\n    updateStudent();\r\n  }\r\n\r\n  if (isUpdated) {\r\n    return <Redirect to={{\r\n      pathname: '/students/'+student.id,\r\n      state: flash\r\n    }}/>\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">\r\n        ...\r\n      </div>\r\n      <div className=\"row\">\r\n        <form onSubmit={handleSubmit} className=\"col s12 offset-m3\">\r\n          \r\n          <h5 className=\"grey-text text-darken-3\">Update Student: </h5>\r\n\r\n          <div className=\"text-h\">...</div>\r\n\r\n          <div className=\"row\">\r\n                <div className=\"input-field col s6\">\r\n                  <i className=\"material-icons prefix\">account_circle</i>\r\n                  <label className=\"active\" htmlFor=\"full_name\">Full Name</label>\r\n                  <input type=\"text\" id=\"full_name\" className=\"validate\" defaultValue={student.full_name} onChange={handleChange}/>\r\n                </div>\r\n              </div>\r\n\r\n          <div className=\"row\">\r\n                <div className=\"input-field col s6\">\r\n                  <i className=\"material-icons prefix\">accessibility</i>\r\n                  <label className=\"active\" htmlFor=\"age\">Age</label>\r\n                  <input type=\"text\" id=\"age\" className=\"validate\"  defaultValue={student.age} onChange={handleChange}/>\r\n                </div>\r\n              </div>\r\n\r\n          <div className=\"row\">\r\n                <div className=\"input-field col s6\">\r\n                  <i className=\"material-icons prefix\">email</i>\r\n                  <label className=\"active\" htmlFor=\"email\">Email (Change only through requests)</label>\r\n                  <input disabled type=\"email\" id=\"email\" className=\"validate\" defaultValue={student.email} onChange={handleChange}/>\r\n                </div>\r\n              </div>\r\n\r\n          <div className=\"row\">\r\n                <div className=\"input-field col s6\">\r\n                  <i className=\"material-icons prefix\">phone</i>\r\n                  <label className=\"active\" htmlFor=\"phone\">Phone</label>\r\n                  <input type=\"text\" id=\"phone\" className=\"validate\" defaultValue={student.phone} onChange={handleChange}/>\r\n                </div>\r\n              </div>\r\n\r\n          <div className=\"row center\">\r\n              <div className=\"input-field col s6\">\r\n                <button className=\"btn blue lighten-1 waves-effect waves-light hoverable\">Update</button>\r\n              </div>\r\n            </div>\r\n            \r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport const CreateStudent = () => {\r\n  const [state, setState] = useState();\r\n\r\n  const [schools, setSchools] = useState();\r\n  const [classes, setClasses] = useState();\r\n  const [currentSchool, setCurrentSchool] = useState();\r\n  const [isEnabled, setEnabled] = useState(\"disabled\");\r\n\r\n  const [flash, setFlash] = useState();\r\n  const [isCreated, setCreated] = useState();\r\n\r\n  useEffect(() => {\r\n    const loadClasses = () => {\r\n      fetch('/api/classes', {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application-json\",\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      }).then(resp => {\r\n        if (resp.ok) {\r\n          resp.json().then(data => {\r\n            setClasses(data.classes)\r\n          })\r\n        }\r\n      })\r\n    };\r\n    const loadSchools = () => {\r\n      fetch('/api/schools', {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application-json\",\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      }).then(resp => {\r\n        if (resp.ok) {\r\n          resp.json().then(data => {\r\n            setSchools(data.schools)\r\n          })\r\n        }\r\n      })\r\n    };\r\n\r\n    loadClasses();\r\n    loadSchools();\r\n  }, [])\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n  \r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.value) {\r\n      setState({\r\n        ...state,\r\n        [e.target.id]: e.target.value\r\n      })\r\n    }\r\n\r\n    if (e.target.name === \"schools\") {\r\n      setEnabled(\"\")\r\n      setCurrentSchool(e.target.value)\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const createStudent = async() => {\r\n      await fetch('/api/students', {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(state)\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          setFlash({\r\n            message: data.student,\r\n            created: \"student\",\r\n            type: \"SUCCESS_CREATION\"\r\n          })\r\n          setCreated(true);\r\n        })\r\n      })\r\n    };\r\n    createStudent();\r\n  }\r\n\r\n  if (isCreated){\r\n    return <Redirect to={{\r\n      pathname: '/students',\r\n      state: flash\r\n    }}/>\r\n  }\r\n\r\n  const schoolsOption = schools ? (schools.map(school => {\r\n    return(\r\n      <option value={school.id} key={school.id}>{school.name}</option>\r\n    )\r\n  })) : null;\r\n\r\n  const classesOption = classes ? (classes.map(grade => {\r\n    if (grade.school.id == currentSchool) {\r\n      return(\r\n        <option value={grade.id} key={grade.id}>{grade.class}</option>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n\r\n  })) : null;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">\r\n        ...\r\n      </div>\r\n      <div className=\"row\">\r\n        <form onSubmit={handleSubmit} className=\"col s12 offset-m3\">\r\n          \r\n          <h5 className=\"grey-text text-darken-3\">Create Student:</h5>\r\n\r\n          <div className=\"text-h\">...</div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">account_circle</i>\r\n              <label htmlFor=\"full_name\">Full Name</label>\r\n              <input required='required' type=\"text\" id=\"full_name\" className=\"validate\" onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">accessibility</i>\r\n              <label htmlFor=\"age\">Age</label>\r\n              <input required='required' type=\"text\" maxLength='3' id=\"age\" className=\"validate\" onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">email</i>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input required='required' type=\"email\" id=\"email\" className=\"validate\" onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">phone</i>\r\n              <label htmlFor=\"phone\">Phone</label>\r\n              <input type=\"text\" id=\"phone\" className='validate'  onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\"></i>\r\n              <label htmlFor=\"school\" />\r\n              <select name=\"schools\" id=\"school\" required='required' className=\"browser-default\" onChange={handleChange}>\r\n                <option value=\"\" disabled selected>Choose A School</option>\r\n                {schoolsOption}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\"></i>\r\n              <label htmlFor=\"class\" />\r\n              <select name=\"classes\" id=\"class\" required='required' className=\"browser-default\" disabled={isEnabled} onChange={handleChange}>\r\n                <option value=\"\" disabled selected>Choose A Class</option>\r\n                {classesOption}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row center\">\r\n            <div className=\"input-field col s6\">\r\n              <button className=\"btn green lighten-1 waves-effect waves-light hoverable\">Create</button>\r\n            </div>\r\n          </div>\r\n          \r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { Students } from '../Students/Students';\r\nimport { Student } from '../Students/Student';\r\nimport { UpdateStudent } from '../Students/updateStudent';\r\nimport { CreateStudent } from '../Students/createStudent';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n\r\nexport const StudentsLinks = () => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/students' component={Students} />\r\n      <Route exact path='/students/create' component={CreateStudent} />\r\n      <Route exact path='/students/:id' component={Student} />\r\n      <Route exact path='/students/:id/update' component={UpdateStudent} />\r\n    </Switch>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const Teachers = (props) => {\r\n  const flash = props.history.location.state;\r\n  const [teachers, setTeachers] = useState();\r\n  const [createTeacher, setCreateTeacher] = useState();\r\n  const [error, setError] = useState({\r\n    error: null,\r\n    message: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch('/api/teachers', {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      }\r\n    }).then(resp => {\r\n      if (resp.ok) {\r\n        resp.json().then(data => {\r\n          setTeachers(data.teachers)\r\n        })\r\n      } else {\r\n        resp.json().then(data => {\r\n          setError({\r\n            error: data.error,\r\n            message: data.message \r\n          })\r\n        })\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n  const handleCreate = (e) => {\r\n    e.preventDefault();\r\n    setCreateTeacher(true);\r\n  }\r\n\r\n  const flashRender = () => {\r\n    if (flash.type === 'SUCCESS_DELETION') {\r\n      return (\r\n        <div className=\"blue lighten-3 card-panel red-text text-darken-2\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    };\r\n    if (flash.type === 'SUCCESS_CREATION') {\r\n      return (\r\n        <div className=\"green lighten-3 card-panel blue-text text-darken-2\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    };\r\n    if (flash.type === 'NOT_FOUND') {\r\n      return (\r\n        <div className=\"yellow lighten-2 card-panel blue-text text-darken-3\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const teachers_list = teachers ? (teachers.map(teacher => {\r\n    return (\r\n      <div className=\"card grey lighten-3 z-depth-1 hoverable\" key={teacher.id}>\r\n        <Link to={'/teachers/' + teacher.id} className='black-text'>\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">\r\n              <h5>{teacher.full_name}</h5>\r\n            </span>\r\n            <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <p className=\"col\">Email: {teacher.email}</p>\r\n              <p className=\"col\">Phone: {teacher.phone}</p>\r\n            </div>\r\n            <div className=\"row\">\r\n              <p className=\"col\">School: {teacher.school.name}</p>\r\n              <p className=\"col\">Class: {teacher.class.class}</p>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    )\r\n  })) : (   \r\n      <div className=\"progress\">\r\n        <div className=\"indeterminate\"/>\r\n      </div>\r\n    )\r\n\r\n  const error_view = (\r\n    <div className=\"card\">\r\n      <div className=\"card-content center\">\r\n         <div className=\"card-title\">{error.message} ({error.error})</div>\r\n      </div>\r\n    </div>\r\n  )\r\n \r\n  const view = error.error ? (error_view) : (teachers_list)\r\n\r\n  const flash_view = flash ? (\r\n    flashRender()\r\n  ) : null;\r\n\r\n  if (createTeacher) {\r\n    return <Redirect to={{\r\n      pathname: '/teachers/create'\r\n    }} />\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">\r\n        ...\r\n      </div>\r\n      <div className=\"container\">\r\n        {flash_view}\r\n      </div>\r\n      <div className=\"container\">\r\n      <button onClick={handleCreate} className=\"right waves-effect waves-light btn green blue hoverable\">Create</button>\r\n        <h4 className=''>Teachers:</h4>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-6\">\r\n            <div className=\"text-h\">...</div>\r\n            {view}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const Teacher = (props) => {\r\n  const flashMessage = props.history.location.state;\r\n  const [teacher, setTeacher] = useState();\r\n  const [user, setUser] = useState();\r\n\r\n  const [updatePage, setUpdatePage] = useState();\r\n  const [isDeleted, setIsDeleted] = useState();\r\n  const [notFound, setNotFound] = useState();\r\n\r\n  const [flash, setFlash] = useState();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/teachers/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      }\r\n    }).then(resp => {\r\n      resp.json().then(data => {\r\n        if (resp.ok){\r\n          setTeacher(data.teacher)\r\n        } else {\r\n          setFlash({\r\n            message: data.message,\r\n            updated: \"teacher\",\r\n            type: \"NOT_FOUND\"\r\n          });\r\n          setNotFound(true)\r\n        }\r\n      })\r\n    });\r\n  }, [id])\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n\r\n  const handleDeleteButton = (e) => {\r\n    e.preventDefault();\r\n    const deleteTeacher = async() => {\r\n      await fetch(`/api/teachers/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          // console.log(data);\r\n          setFlash({\r\n            'message': data.teacher,\r\n            'type': 'SUCCESS_DELETION'\r\n          });\r\n          setIsDeleted(true);\r\n        })\r\n      })\r\n    };\r\n    deleteTeacher();\r\n  }\r\n\r\n  const handleUpdateButton = (e) => {\r\n    e.preventDefault();\r\n    // console.log('Update');\r\n    setUpdatePage(true);\r\n  }\r\n\r\n  const flashRender = () => {\r\n    if (flashMessage.type === 'SUCCESS_UPDATION') {\r\n      return (\r\n        <div className=\"green lighten-3 card-panel blue-text text-darken-2\">\r\n          {flashMessage.message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  const userRender = () => {\r\n    const getUser = async() => {\r\n      await fetch(\"/api/users/\"+teacher.user_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          // console.log(data.user);\r\n          setUser(data.user);\r\n        })\r\n      })\r\n    }\r\n    getUser();\r\n  }\r\n\r\n  if (updatePage){\r\n    return <Redirect to={{\r\n      pathname: '/teachers/'+id+'/update',\r\n      state: teacher\r\n      }}/>\r\n  }\r\n\r\n  if (isDeleted){\r\n    return <Redirect to={{\r\n      pathname: '/teachers',\r\n      state: flash\r\n    }}/>\r\n  }\r\n\r\n  if (notFound){\r\n    return <Redirect to={{\r\n      pathname: '/teachers',\r\n      state: flash\r\n    }} />\r\n  }\r\n\r\n  if (teacher && teacher.user_id && !user) {\r\n    // console.log(teacher.user_id);\r\n    userRender();\r\n  }\r\n\r\n  const flash_view = flashMessage ? (\r\n    flashRender()\r\n  ) : null;\r\n\r\n  const teacher_view = teacher ? (\r\n      user ? (\r\n        <div className=\"card grey lighten-2 z-depth-2\">\r\n        <div className=\"card-content\">\r\n          <span className=\"title\">\r\n            <h5><strong>Full Name:</strong> {teacher.full_name}</h5>\r\n          </span>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">User Information:</span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>User ID:</th>\r\n                        <th>User Type:</th>\r\n                        <th>User Email:</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr>\r\n                        <td>#{user.id}</td>\r\n                        <td>{user.type}</td>\r\n                        <td>{user.email}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">Teacher Information:</span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Age:</th>\r\n                        <th>Email:</th>\r\n                        <th>Phone:</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr>\r\n                        <td>{teacher.age}</td>\r\n                        <td>{teacher.email}</td>\r\n                        <td>{teacher.phone}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"row\">\r\n                <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Teacher ID:</th>\r\n                        <th>School:</th>\r\n                        <th>Class:</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr>\r\n                        <td>#{teacher.id}</td>\r\n                        <td>{teacher.school.name}</td>\r\n                        <td>{teacher.class.class}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <div className=\"row\">\r\n            <div className=\"right\">\r\n              <div className=\"buttons\">\r\n                <button className=\"col waves-effect waves-light btn blue hoverable\" onClick={handleUpdateButton}>Update</button>\r\n                <button className=\"ml-5 col waves-effect waves-light btn modal-trigger red hoverable\" onClick={handleDeleteButton}>Delete</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h6 className=\"red-text lighten-3\">Deleting the Teacher will also Delete the associated User!</h6>\r\n        </div>\r\n      </div>\r\n      ) : (\r\n        <div className=\"card grey lighten-2 z-depth-2\">\r\n        <div className=\"card-content\">\r\n          <span className=\"title\">\r\n            <h5><strong>Full Name:</strong> {teacher.full_name}</h5>\r\n          </span>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">User Information:</span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">Teacher Information:</span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Age:</th>\r\n                        <th>Email:</th>\r\n                        <th>Phone:</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr>\r\n                        <td>{teacher.age}</td>\r\n                        <td>{teacher.email}</td>\r\n                        <td>{teacher.phone}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"row\">\r\n                <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Teacher ID:</th>\r\n                        <th>School:</th>\r\n                        <th>Class:</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr>\r\n                        <td>#{teacher.id}</td>\r\n                        <td>{teacher.school.name}</td>\r\n                        <td>{teacher.class.class}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <div className=\"row\">\r\n            <div className=\"right\">\r\n              <div className=\"buttons\">\r\n                <button className=\"col waves-effect waves-light btn blue hoverable\" onClick={handleUpdateButton}>Update</button>\r\n                <button className=\"ml-5 col waves-effect waves-light btn modal-trigger red hoverable\" onClick={handleDeleteButton}>Delete</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h6 className=\"red-text lighten-3\">Deleting the Teacher will also Delete the associated User!</h6>\r\n        </div>\r\n      </div>\r\n      )\r\n    ) : (\r\n      <div className=\"progress\">\r\n        <div className=\"indeterminate\"/>\r\n      </div>\r\n    )\r\n\r\n  return(\r\n    <div className=\"container\">\r\n    <div className=\"container text-h\">\r\n      ...\r\n    </div>\r\n      <div className=\"container\">\r\n        {flash_view}\r\n      </div>\r\n      <div className=\"container center\">\r\n        {teacher_view}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport const UpdateTeacher = (props) => {\r\n  const teacher = props.history.location.state;\r\n  const [state, setState] = useState(teacher);\r\n  const [flash, setFlash] = useState();\r\n  const [isUpdated, setUpdated] = useState();\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n  \r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.value) {\r\n      setState({\r\n        ...state,\r\n        [e.target.id]: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const updateTeacher = async() => {\r\n      await fetch('/api/teachers/'+teacher.id, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(state)\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          setFlash({\r\n            message: data.teacher,\r\n            updated: \"teacher\",\r\n            type: \"SUCCESS_UPDATION\"\r\n          })\r\n          setUpdated(true);\r\n        })\r\n      })\r\n    };\r\n    updateTeacher();\r\n  }\r\n\r\n  if (isUpdated) {\r\n    return <Redirect to={{\r\n      pathname: '/teachers/'+teacher.id,\r\n      state: flash\r\n    }}/>\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">\r\n        ...\r\n      </div>\r\n      <div className=\"row\">\r\n        <form onSubmit={handleSubmit} className=\"col s12 offset-m3\">\r\n          \r\n          <h5 className=\"grey-text text-darken-3\">Update Teacher: </h5>\r\n\r\n          <div className=\"text-h\">...</div>\r\n\r\n          <div className=\"row\">\r\n                <div className=\"input-field col s6\">\r\n                  <i className=\"material-icons prefix\">account_circle</i>\r\n                  <label className=\"active\" htmlFor=\"full_name\">Full Name</label>\r\n                  <input type=\"text\" id=\"full_name\" className=\"validate\" defaultValue={teacher.full_name} onChange={handleChange}/>\r\n                </div>\r\n              </div>\r\n\r\n          <div className=\"row\">\r\n                <div className=\"input-field col s6\">\r\n                  <i className=\"material-icons prefix\">accessibility</i>\r\n                  <label className=\"active\" htmlFor=\"age\">Age</label>\r\n                  <input type=\"text\" id=\"age\" className=\"validate\"  defaultValue={teacher.age} onChange={handleChange}/>\r\n                </div>\r\n              </div>\r\n\r\n          <div className=\"row\">\r\n                <div className=\"input-field col s6\">\r\n                  <i className=\"material-icons prefix\">email</i>\r\n                  <label className=\"active\" htmlFor=\"email\">Email (Change only through requests)</label>\r\n                  <input disabled type=\"email\" id=\"email\" className=\"validate\" defaultValue={teacher.email} onChange={handleChange}/>\r\n                </div>\r\n              </div>\r\n\r\n          <div className=\"row\">\r\n                <div className=\"input-field col s6\">\r\n                  <i className=\"material-icons prefix\">phone</i>\r\n                  <label className=\"active\" htmlFor=\"phone\">Phone</label>\r\n                  <input type=\"text\" id=\"phone\" className=\"validate\" defaultValue={teacher.phone} onChange={handleChange}/>\r\n                </div>\r\n              </div>\r\n\r\n          <div className=\"row center\">\r\n              <div className=\"input-field col s6\">\r\n                <button className=\"btn blue lighten-1 waves-effect waves-light hoverable\">Update</button>\r\n              </div>\r\n            </div>\r\n            \r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport const CreateTeacher = () => {\r\n  const [state, setState] = useState();\r\n\r\n  const [schools, setSchools] = useState();\r\n  const [classes, setClasses] = useState();\r\n  const [currentSchool, setCurrentSchool] = useState();\r\n  const [isEnabled, setEnabled] = useState(\"disabled\");\r\n\r\n  const [flash, setFlash] = useState();\r\n  const [isCreated, setCreated] = useState();\r\n\r\n  useEffect(() => {\r\n    const loadClasses = () => {\r\n      fetch('/api/classes', {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application-json\",\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      }).then(resp => {\r\n        if (resp.ok) {\r\n          resp.json().then(data => {\r\n            setClasses(data.classes)\r\n          })\r\n        }\r\n      })\r\n    };\r\n    const loadSchools = () => {\r\n      fetch('/api/schools', {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application-json\",\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      }).then(resp => {\r\n        if (resp.ok) {\r\n          resp.json().then(data => {\r\n            setSchools(data.schools)\r\n          })\r\n        }\r\n      })\r\n    };\r\n\r\n    loadClasses();\r\n    loadSchools();\r\n  }, [])\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n  \r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.value) {\r\n      setState({\r\n        ...state,\r\n        [e.target.id]: e.target.value\r\n      })\r\n    }\r\n    if (e.target.name === \"schools\") {\r\n      setEnabled(\"\")\r\n      setCurrentSchool(e.target.value)\r\n    }\r\n    \r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const createTeacher = async() => {\r\n      await fetch('/api/teachers', {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(state)\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          setFlash({\r\n            message: data.teacher,\r\n            created: \"teacher\",\r\n            type: \"SUCCESS_CREATION\"\r\n          })\r\n          setCreated(true);\r\n        })\r\n      })\r\n    };\r\n    createTeacher();\r\n  }\r\n\r\n  if (isCreated){\r\n    return <Redirect to={{\r\n      pathname: '/teachers',\r\n      state: flash\r\n    }}/>\r\n  }\r\n\r\n  const schoolsOption = schools ? (schools.map(school => {\r\n    return(\r\n      <option value={school.id} key={school.id}>{school.name}</option>\r\n    )\r\n  })) : null;\r\n\r\n  const classesOption = classes ? (classes.map(grade => {\r\n    if (grade.school.id == currentSchool) {\r\n      if (grade.teacher && !grade.teacher[0]){\r\n        return(\r\n          <option value={grade.id} key={grade.id}>{grade.class}</option>\r\n        )\r\n      } else {\r\n        return null\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n\r\n  })) : null;\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">\r\n        ...\r\n      </div>\r\n      <div className=\"row\">\r\n        <form onSubmit={handleSubmit} className=\"col s12 offset-m3\">\r\n          \r\n          <h5 className=\"grey-text text-darken-3\">Create Teacher: </h5>\r\n\r\n          <div className=\"text-h\">...</div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">account_circle</i>\r\n              <label htmlFor=\"full_name\">Full Name</label>\r\n              <input required='required' type=\"text\" id=\"full_name\" className=\"validate\" onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">accessibility</i>\r\n              <label htmlFor=\"age\">Age</label>\r\n              <input required='required' type=\"number\" id=\"age\" className=\"validate\" onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">email</i>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input required='required' type=\"email\" id=\"email\" className=\"validate\" onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">phone</i>\r\n              <label htmlFor=\"phone\">Phone</label>\r\n              <input type=\"number\" id=\"phone\" className=\"validate\" onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\"></i>\r\n              <label htmlFor=\"school\" />\r\n              <select name=\"schools\" id=\"school\" required='required' className=\"browser-default\" onChange={handleChange}>\r\n                <option value=\"\" disabled selected>Choose A School</option>\r\n                {schoolsOption}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\"></i>\r\n              <label htmlFor=\"class\" />\r\n              <select name=\"classes\" id=\"class\" required='required' className=\"browser-default\" disabled={isEnabled} onChange={handleChange}>\r\n                <option value=\"\" disabled selected>Choose A Class</option>\r\n                {classesOption}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"row center\">\r\n              <div className=\"input-field col s6\">\r\n                <button className=\"btn green lighten-1 waves-effect waves-light hoverable\">Create</button>\r\n              </div>\r\n            </div>\r\n            \r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { Teachers } from '../Teachers/Teachers';\r\nimport { Teacher } from '../Teachers/Teacher';\r\nimport { UpdateTeacher } from '../Teachers/updateTeacher';\r\nimport { CreateTeacher } from '../Teachers/createTeacher';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n\r\nexport const TeachersLinks = () => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/teachers' component={Teachers} />\r\n      <Route exact path='/teachers/create' component={CreateTeacher} />\r\n      <Route exact path='/teachers/:id' component={Teacher} />\r\n      <Route exact path='/teachers/:id/update' component={UpdateTeacher} />\r\n    </Switch>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const Managers = (props) => {\r\n  const flash = props.history.location.state;\r\n  const [managers, setManagers] = useState();\r\n  const [createManager, setCreateManager] = useState();\r\n  const [error, setError] = useState({\r\n    error: null,\r\n    message: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch('/api/managers', {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      }\r\n    }).then(resp => {\r\n      if (resp.ok) {\r\n        resp.json().then(data => {\r\n          setManagers(data.managers)\r\n        })\r\n      } else {\r\n        resp.json().then(data => {\r\n          setError({\r\n            error: data.error,\r\n            message: data.message \r\n          })\r\n        })\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n  const handleCreate = (e) => {\r\n    e.preventDefault();\r\n    setCreateManager(true);\r\n  }\r\n\r\n  const flashRender = () => {\r\n    if (flash.type === 'SUCCESS_DELETION') {\r\n      return (\r\n        <div className=\"blue lighten-3 card-panel red-text text-darken-2\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    };\r\n    if (flash.type === 'SUCCESS_CREATION') {\r\n      return (\r\n        <div className=\"green lighten-3 card-panel blue-text text-darken-2\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    };\r\n    if (flash.type === 'NOT_FOUND') {\r\n      return (\r\n        <div className=\"yellow lighten-2 card-panel blue-text text-darken-3\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const managers_list = managers ? (managers.map(manager => {\r\n    return (\r\n      <div className=\"card grey lighten-3 z-depth-1 hoverable\" key={manager.id}>\r\n        <Link to={'/managers/' + manager.id} className='black-text'>\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">\r\n              <h5>{manager.full_name}</h5>\r\n            </span>\r\n            <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <p className=\"col\">Email: {manager.email}</p>\r\n              <p className=\"col\">Phone: {manager.phone}</p>\r\n            </div>\r\n            <div className=\"row\">\r\n              <p className=\"col\">School: {manager.school.name}</p>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    )\r\n  })) : (   \r\n      <div className=\"progress\">\r\n        <div className=\"indeterminate\"/>\r\n      </div>\r\n    )\r\n\r\n  const error_view = (\r\n    <div className=\"card\">\r\n      <div className=\"card-content center\">\r\n         <div className=\"card-title\">{error.message} ({error.error})</div>\r\n      </div>\r\n    </div>\r\n  ) \r\n \r\n  const view = error.error ? (error_view) : (managers_list)\r\n\r\n  const flash_view = flash ? (\r\n    flashRender()\r\n  ) : null;\r\n\r\n  if (createManager) {\r\n    return <Redirect to={{\r\n      pathname: '/managers/create'\r\n    }} />\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">\r\n        ...\r\n      </div>\r\n      <div className=\"container\">\r\n        {flash_view}\r\n      </div>\r\n      <div className=\"container\">\r\n      <button onClick={handleCreate} className=\"right waves-effect waves-light btn green blue hoverable\">Create</button>\r\n        <h4 className=''>Managers:</h4>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-6\">\r\n            <div className=\"text-h\">...</div>\r\n            {view}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const Manager = (props) => {\r\n  const flashMessage = props.history.location.state;\r\n  const [manager, setManager] = useState();\r\n  const [user, setUser] = useState();\r\n\r\n  const [updatePage, setUpdatePage] = useState();\r\n  const [isDeleted, setIsDeleted] = useState();\r\n  const [notFound, setNotFound] = useState();\r\n\r\n  const [flash, setFlash] = useState();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/managers/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      }\r\n    }).then(resp => {\r\n      resp.json().then(data => {\r\n        if (resp.ok){\r\n          setManager(data.manager)\r\n        } else {\r\n          setFlash({\r\n            message: data.message,\r\n            updated: \"manager\",\r\n            type: \"NOT_FOUND\"\r\n          });\r\n          setNotFound(true)\r\n        }\r\n      })\r\n    });\r\n  }, [id])\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n\r\n  const handleDeleteButton = (e) => {\r\n    e.preventDefault();\r\n    const deleteManager = async() => {\r\n      await fetch(`/api/managers/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          // console.log(data);\r\n          setFlash({\r\n            'message': data.manager,\r\n            'type': 'SUCCESS_DELETION'\r\n          });\r\n          setIsDeleted(true);\r\n        })\r\n      })\r\n    };\r\n    deleteManager();\r\n  }\r\n\r\n  const handleUpdateButton = (e) => {\r\n    e.preventDefault();\r\n    // console.log('Update');\r\n    setUpdatePage(true);\r\n  }\r\n\r\n  const flashRender = () => {\r\n    if (flashMessage.type === 'SUCCESS_UPDATION') {\r\n      return (\r\n        <div className=\"green lighten-3 card-panel blue-text text-darken-2\">\r\n          {flashMessage.message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  const userRender = () => {\r\n    const getUser = async() => {\r\n      await fetch(\"/api/users/\"+manager.user_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          // console.log(data.user);\r\n          setUser(data.user);\r\n        })\r\n      })\r\n    }\r\n    getUser();\r\n  }\r\n\r\n  if (updatePage){\r\n    return <Redirect to={{\r\n      pathname: '/managers/'+id+'/update',\r\n      state: manager\r\n      }}/>\r\n  }\r\n\r\n  if (isDeleted){\r\n    return <Redirect to={{\r\n      pathname: '/managers',\r\n      state: flash\r\n    }}/>\r\n  }\r\n\r\n  if (notFound){\r\n    return <Redirect to={{\r\n      pathname: '/managers',\r\n      state: flash\r\n    }} />\r\n  }\r\n\r\n  if (manager && manager.user_id && !user) {\r\n    userRender();\r\n  }\r\n\r\n  const flash_view = flashMessage ? (\r\n    flashRender()\r\n  ) : null;\r\n\r\n  const manager_view = manager ? (\r\n      user ? (\r\n        <div className=\"card grey lighten-2 z-depth-2\">\r\n        <div className=\"card-content\">\r\n          <span className=\"title\">\r\n            <h5><strong>Full Name:</strong> {manager.full_name}</h5>\r\n          </span>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">User Information:</span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>User ID:</th>\r\n                        <th>User Type:</th>\r\n                        <th>User Email:</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr>\r\n                        <td>#{user.id}</td>\r\n                        <td>{user.type}</td>\r\n                        <td>{user.email}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">Manager Information:</span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Age:</th>\r\n                        <th>Email:</th>\r\n                        <th>Phone:</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr>\r\n                        <td>{manager.age}</td>\r\n                        <td>{manager.email}</td>\r\n                        <td>{manager.phone}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"row\">\r\n                <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Manager ID:</th>\r\n                        <th>School:</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr>\r\n                        <td>#{manager.id}</td>\r\n                        <td>{manager.school.name}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <div className=\"row\">\r\n            <div className=\"right\">\r\n              <div className=\"buttons\">\r\n                <button className=\"col waves-effect waves-light btn blue hoverable\" onClick={handleUpdateButton}>Update</button>\r\n                <button className=\"ml-5 col waves-effect waves-light btn modal-trigger red hoverable\" onClick={handleDeleteButton}>Delete</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h6 className=\"red-text lighten-3\">Deleting the Manager will also Delete the associated User!</h6>\r\n        </div>\r\n      </div>\r\n      ) : (\r\n        <div className=\"card grey lighten-2 z-depth-2\">\r\n        <div className=\"card-content\">\r\n          <span className=\"title\">\r\n            <h5><strong>Full Name:</strong> {manager.full_name}</h5>\r\n          </span>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">User Information:</span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">Manager Information:</span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Age:</th>\r\n                        <th>Email:</th>\r\n                        <th>Phone:</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr>\r\n                        <td>{manager.age}</td>\r\n                        <td>{manager.email}</td>\r\n                        <td>{manager.phone}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"row\">\r\n                <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Manager ID:</th>\r\n                        <th>School:</th>\r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr>\r\n                        <td>#{manager.id}</td>\r\n                        <td>{manager.school.name}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <div className=\"row\">\r\n            <div className=\"right\">\r\n              <div className=\"buttons\">\r\n                <button className=\"col waves-effect waves-light btn blue hoverable\" onClick={handleUpdateButton}>Update</button>\r\n                <button className=\"ml-5 col waves-effect waves-light btn modal-trigger red hoverable\" onClick={handleDeleteButton}>Delete</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h6 className=\"red-text lighten-3\">Deleting the Manager will also Delete the associated User!</h6>\r\n        </div>\r\n      </div>\r\n      )\r\n    ) : (\r\n      <div className=\"progress\">\r\n        <div className=\"indeterminate\"/>\r\n      </div>\r\n    )\r\n\r\n  return(\r\n    <div className=\"container\">\r\n    <div className=\"container text-h\">\r\n      ...\r\n    </div>\r\n      <div className=\"container\">\r\n        {flash_view}\r\n      </div>\r\n      <div className=\"container center\">\r\n        {manager_view}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport const UpdateManager = (props) => {\r\n  const manager = props.history.location.state;\r\n  const [state, setState] = useState(manager);\r\n  const [flash, setFlash] = useState();\r\n  const [isUpdated, setUpdated] = useState();\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n  \r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.value) {\r\n      setState({\r\n        ...state,\r\n        [e.target.id]: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const updateManager = async() => {\r\n      await fetch('/api/managers/'+manager.id, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(state)\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          setFlash({\r\n            message: data.manager,\r\n            updated: \"manager\",\r\n            type: \"SUCCESS_UPDATION\"\r\n          })\r\n          setUpdated(true);\r\n        })\r\n      })\r\n    };\r\n    updateManager();\r\n  }\r\n\r\n  if (isUpdated) {\r\n    return <Redirect to={{\r\n      pathname: '/managers/'+manager.id,\r\n      state: flash\r\n    }}/>\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">\r\n        ...\r\n      </div>\r\n      <div className=\"row\">\r\n        <form onSubmit={handleSubmit} className=\"col s12 offset-m3\">\r\n          \r\n          <h5 className=\"grey-text text-darken-3\">Update Manager: </h5>\r\n\r\n          <div className=\"text-h\">...</div>\r\n\r\n          <div className=\"row\">\r\n                <div className=\"input-field col s6\">\r\n                  <i className=\"material-icons prefix\">account_circle</i>\r\n                  <label className=\"active\" htmlFor=\"full_name\">Full Name</label>\r\n                  <input type=\"text\" id=\"full_name\" className=\"validate\" defaultValue={manager.full_name} onChange={handleChange}/>\r\n                </div>\r\n              </div>\r\n\r\n          <div className=\"row\">\r\n                <div className=\"input-field col s6\">\r\n                  <i className=\"material-icons prefix\">accessibility</i>\r\n                  <label className=\"active\" htmlFor=\"age\">Age</label>\r\n                  <input type=\"text\" id=\"age\" className=\"validate\"  defaultValue={manager.age} onChange={handleChange}/>\r\n                </div>\r\n              </div>\r\n\r\n          <div className=\"row\">\r\n                <div className=\"input-field col s6\">\r\n                  <i className=\"material-icons prefix\">email</i>\r\n                  <label className=\"active\" htmlFor=\"email\">Email (Change only through requests)</label>\r\n                  <input disabled type=\"email\" id=\"email\" className=\"validate\" defaultValue={manager.email} onChange={handleChange}/>\r\n                </div>\r\n              </div>\r\n\r\n          <div className=\"row\">\r\n                <div className=\"input-field col s6\">\r\n                  <i className=\"material-icons prefix\">phone</i>\r\n                  <label className=\"active\" htmlFor=\"phone\">Phone</label>\r\n                  <input type=\"text\" id=\"phone\" className=\"validate\" defaultValue={manager.phone} onChange={handleChange}/>\r\n                </div>\r\n              </div>\r\n\r\n          <div className=\"row center\">\r\n              <div className=\"input-field col s6\">\r\n                <button className=\"btn blue lighten-1 waves-effect waves-light hoverable\">Update</button>\r\n              </div>\r\n            </div>\r\n            \r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport const CreateManager = () => {\r\n  const [state, setState] = useState();\r\n\r\n  const [schools, setSchools] = useState();\r\n\r\n  const [flash, setFlash] = useState();\r\n  const [isCreated, setCreated] = useState();\r\n\r\n  useEffect(() => {\r\n    const loadSchools = () => {\r\n      fetch('/api/schools', {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application-json\",\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      }).then(resp => {\r\n        if (resp.ok) {\r\n          resp.json().then(data => {\r\n            setSchools(data.schools)\r\n          })\r\n        }\r\n      })\r\n    };\r\n\r\n    loadSchools();\r\n  }, [])\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n  \r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.value) {\r\n      setState({\r\n        ...state,\r\n        [e.target.id]: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const createManager = async() => {\r\n      await fetch('/api/managers', {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(state)\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          setFlash({\r\n            message: data.manager,\r\n            created: \"manager\",\r\n            type: \"SUCCESS_CREATION\"\r\n          })\r\n          setCreated(true);\r\n        })\r\n      })\r\n    };\r\n    createManager();\r\n  }\r\n\r\n  const schoolsOption = schools ? (schools.map(school => {\r\n    if (school.manager && !school.manager[0]){\r\n      return(\r\n        <option value={school.id} key={school.id}>{school.name}</option>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  })) : null;\r\n\r\n  if (isCreated){\r\n    return <Redirect to={{\r\n      pathname: '/managers',\r\n      state: flash\r\n    }}/>\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">\r\n        ...\r\n      </div>\r\n      <div className=\"row\">\r\n        <form onSubmit={handleSubmit} className=\"col s12 offset-m3\">\r\n          \r\n          <h5 className=\"grey-text text-darken-3\">Create Manager: </h5>\r\n\r\n          <div className=\"text-h\">...</div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">account_circle</i>\r\n              <label htmlFor=\"full_name\">Full Name</label>\r\n              <input required='required' type=\"text\" id=\"full_name\" className=\"validate\" onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">accessibility</i>\r\n              <label htmlFor=\"age\">Age</label>\r\n              <input required='required' type=\"number\" id=\"age\" className=\"validate\" onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">email</i>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input required='required' type=\"email\" id=\"email\" className=\"validate\" onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">phone</i>\r\n              <label htmlFor=\"phone\">Phone</label>\r\n              <input type=\"number\" id=\"phone\" className=\"validate\" onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\"></i>\r\n              <label htmlFor=\"school\" />\r\n              <select name=\"schools\" id=\"school\" required='required' className=\"browser-default\" onChange={handleChange}>\r\n                <option value=\"\" disabled selected>Choose A School</option>\r\n                {schoolsOption}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row center\">\r\n              <div className=\"input-field col s6\">\r\n                <button className=\"btn green lighten-1 waves-effect waves-light hoverable\">Create</button>\r\n              </div>\r\n            </div>\r\n            \r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { Managers } from '../Managers/Managers';\r\nimport { Manager } from '../Managers/Manager';\r\nimport { UpdateManager } from '../Managers/updateManager';\r\nimport { CreateManager } from '../Managers/createManager';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n\r\nexport const ManagersLinks = () => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/managers' component={Managers} />\r\n      <Route exact path='/managers/create' component={CreateManager} />\r\n      <Route exact path='/managers/:id' component={Manager} />\r\n      <Route exact path='/managers/:id/update' component={UpdateManager} />\r\n    </Switch>\r\n  )\r\n}","import React, {useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n// grade is used here to represent 'class'\r\n\r\nexport const Classes = (props) => {\r\n  const flash =props.history.location.state;\r\n  const [classes, setClasses] = useState();\r\n  const [createClasses, setCreateClasses] = useState();\r\n  const [error, setError] = useState({\r\n    error: null,\r\n    message: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch('/api/classes', {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      }\r\n    }).then(resp => {\r\n      if (resp.ok) {\r\n        resp.json().then(data => {\r\n          setClasses(data.classes)\r\n        })\r\n      } else {\r\n        resp.json().then(data => {\r\n          setError({\r\n            error: data.error,\r\n            message: data.message \r\n          })\r\n        })\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n  const handleCreate = (e) => {\r\n    e.preventDefault();\r\n    setCreateClasses(true);\r\n  }\r\n\r\n  const flashRender = () => {\r\n    if (flash.type === 'SUCCESS_DELETION') {\r\n      return (\r\n        <div className=\"blue lighten-3 card-panel red-text text-darken-2\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    };\r\n    if (flash.type === 'SUCCESS_CREATION') {\r\n      return (\r\n        <div className=\"green lighten-3 card-panel blue-text text-darken-2\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    };\r\n    if (flash.type === 'NOT_FOUND') {\r\n      return (\r\n        <div className=\"yellow lighten-2 card-panel blue-text text-darken-3\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const loadTeacher = (grade) => {\r\n    if (grade.teacher && grade.teacher[0]){\r\n      return(\r\n        <p className=\"col\">Teacher: {grade.teacher[0].full_name}</p>\r\n      )\r\n    } else {\r\n      return(\r\n        <p className=\"col\">Teacher: <strong>No Teacher Assigned</strong></p>\r\n      )\r\n    }\r\n  }\r\n\r\n  const classes_list = classes ? (classes.map(grade => {\r\n    return (\r\n      <div className=\"card grey lighten-3 z-depth-1 hoverable\" key={grade.id}>\r\n        <Link to={'/classes/'+ grade.id} className='black-text'>\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">\r\n              <h5>{grade.class}</h5>\r\n            </span>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                {loadTeacher(grade)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    )\r\n  })) : (\r\n    <div className=\"progress\">\r\n      <div className=\"indeterminate\" />\r\n    </div>\r\n  )\r\n\r\n  const error_view = (\r\n    <div className=\"card\">\r\n      <div className=\"card-content center\">\r\n         <div className=\"card-title\">{error.message} ({error.error})</div>\r\n      </div>\r\n    </div>\r\n  ) \r\n\r\n  const view = error.error ? (error_view) : (classes_list)\r\n\r\n\r\n  const flash_view = flash ? (flashRender()) : null;\r\n\r\n  if (createClasses) {\r\n    return <Redirect to={{\r\n      pathname: '/classes/create'\r\n    }} />\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">\r\n        ...\r\n      </div>\r\n      <div className=\"container\">\r\n        {flash_view}\r\n      </div>\r\n      <div className=\"container\">\r\n      <button onClick={handleCreate} className=\"right waves-effect waves-light btn green blue hoverable\">Create</button>\r\n        <h4 className=''>Classes:</h4>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-6\">\r\n            <div className=\"text-h\">...</div>\r\n            {view}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\n\r\nexport const Class = (props) => {\r\n  const flashMessage = props.history.location.state;\r\n  const [grade, setClass] = useState();\r\n\r\n  const [updatePage, setUpdatePage] = useState();\r\n  const [isDeleted, setIsDeleted] = useState();\r\n  const [notFound, setNotFound] = useState();\r\n\r\n  const [flash, setFlash] = useState();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/classes/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      }\r\n    }).then(resp => {\r\n      resp.json().then(data => {\r\n        if (resp.ok){\r\n          setClass(data.class)\r\n        } else {\r\n          setFlash({\r\n            message: data.message,\r\n            updated: \"class\",\r\n            type: \"NOT_FOUND\"\r\n          });\r\n          setNotFound(true)\r\n        }\r\n      })\r\n    });\r\n  }, [id])\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n\r\n  const handleDeleteButton = (e) => {\r\n    e.preventDefault();\r\n    const deleteClass = async() => {\r\n      await fetch(`/api/classes/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          // console.log(data);\r\n          setFlash({\r\n            'message': data.class,\r\n            'type': 'SUCCESS_DELETION'\r\n          });\r\n          setIsDeleted(true);\r\n        })\r\n      })\r\n    };\r\n    deleteClass();\r\n  }\r\n\r\n  const handleUpdateButton = (e) => {\r\n    e.preventDefault();\r\n    // console.log('Update');\r\n    setUpdatePage(true);\r\n  }\r\n\r\n  const flashRender = () => {\r\n    if (flashMessage.type === 'SUCCESS_UPDATE') {\r\n      return (\r\n        <div className=\"green lighten-3 card-panel blue-text text-darken-2\">\r\n          {flashMessage.message}\r\n        </div>\r\n      )\r\n    }\r\n    if (flashMessage.type === 'FAILED_UPDATE') {\r\n      return (\r\n        <div className=\"red lighten-1 card-panel black-text text-darken-2\">\r\n          {flashMessage.message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  if (updatePage){\r\n    return <Redirect to={{\r\n      pathname: '/classes/'+id+'/update',\r\n      state: grade\r\n      }}/>\r\n  }\r\n\r\n  if (isDeleted){\r\n    return <Redirect to={{\r\n      pathname: '/classes',\r\n      state: flash\r\n    }}/>\r\n  }\r\n\r\n  if (notFound){\r\n    return <Redirect to={{\r\n      pathname: '/classes',\r\n      state: flash\r\n    }} />\r\n  }\r\n\r\n  const flash_view = flashMessage ? (\r\n    flashRender()\r\n  ) : null;\r\n\r\n  const loadTeacher = () => {\r\n    \r\n    if (grade.teacher && grade.teacher[0]) {\r\n      return(\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n            <th>Teacher ID:</th>\r\n              <th>Name:</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>#{grade.teacher[0].id}</td>\r\n              <td>{grade.teacher[0].full_name}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      )\r\n    } else {\r\n      return(\r\n        <div className=\"center\"><strong>No Teacher Assigned</strong></div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  const class_view = grade ? (\r\n      <div className=\"card grey lighten-2 z-depth-2\">\r\n        <div className=\"card-content\">\r\n          <span className=\"title\">\r\n            <h5><strong>Class Name:</strong> {grade.class}</h5>\r\n          </span>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">School's Information:</span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>School ID:</th>\r\n                        <th>Name:</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>#{grade.school.id}</td>\r\n                        <td>{grade.school.name}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">Teacher's Information:</span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  {loadTeacher()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">\r\n                <h6><strong>Students Information</strong></h6>\r\n              </span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"center\">Number of Students:</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"center\">{grade.students.length}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <div className=\"row\">\r\n            <div className=\"right\">\r\n              <div className=\"buttons\">\r\n                <button className=\"col waves-effect waves-light btn blue hoverable\" onClick={handleUpdateButton}>Update</button>\r\n                <button className=\"ml-5 col waves-effect waves-light btn modal-trigger red hoverable\" onClick={handleDeleteButton}>Delete</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div className=\"progress\">\r\n        <div className=\"indeterminate\"/>\r\n      </div>\r\n    )\r\n\r\n  return(\r\n    <div className=\"container\">\r\n    <div className=\"container text-h\">\r\n      ...\r\n    </div>\r\n      <div className=\"container\">\r\n        {flash_view}\r\n      </div>\r\n      <div className=\"container center\">\r\n        {class_view}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport const CreateClass = () => {\r\n  const [state, setState] = useState();\r\n\r\n  const [schools, setSchools] = useState();\r\n\r\n  const [flash, setFlash] = useState();\r\n  const [isCreated, setCreated] = useState();\r\n\r\n  useEffect(() => {\r\n    const loadSchools = () => {\r\n      fetch('/api/schools', {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application-json\",\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      }).then(resp => {\r\n        if (resp.ok) {\r\n          resp.json().then(data => {\r\n            setSchools(data.schools)\r\n          })\r\n        }\r\n      })\r\n    };\r\n\r\n    loadSchools();\r\n  }, [])\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n  \r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.value) {\r\n      setState({\r\n        ...state,\r\n        [e.target.id]: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const createClass = async() => {\r\n      await fetch('/api/classes', {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(state)\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          setFlash({\r\n            message: data.class,\r\n            created: \"class\",\r\n            type: \"SUCCESS_CREATION\"\r\n          })\r\n          setCreated(true);\r\n        })\r\n      })\r\n    };\r\n    createClass();\r\n  }\r\n\r\n  if (isCreated){\r\n    return <Redirect to={{\r\n      pathname: '/classes',\r\n      state: flash\r\n    }}/>\r\n  }\r\n\r\n  const schoolsOption = schools ? (schools.map(school => {\r\n    return(\r\n      <option value={school.id} key={school.id}>{school.name}</option>\r\n    )\r\n  })) : null;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">\r\n        ...\r\n      </div>\r\n      <div className=\"row\">\r\n        <form onSubmit={handleSubmit} className=\"col s12 offset-m3\">\r\n          \r\n          <h5 className=\"grey-text text-darken-3\">Create Class: </h5>\r\n\r\n          <div className=\"text-h\">...</div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">class</i>\r\n              <label htmlFor=\"class\">Class Name</label>\r\n              <input required='required' type=\"text\" id=\"class\" className=\"validate\" onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\"></i>\r\n              <label htmlFor=\"school\" />\r\n              <select name=\"schools\" id=\"school\" required='required' className=\"browser-default\" onChange={handleChange}>\r\n                <option value=\"\" disabled selected>Choose A School</option>\r\n                {schoolsOption}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"row center\">\r\n              <div className=\"input-field col s6\">\r\n                <button className=\"btn green lighten-1 waves-effect waves-light hoverable\">Create</button>\r\n              </div>\r\n          </div>\r\n            \r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport const UpdateClass = (props) => {\r\n  const grade = props.history.location.state;\r\n  const [state, setState] = useState(grade);\r\n  const [flash, setFlash] = useState();\r\n  const [isUpdated, setUpdated] = useState();\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.value) {\r\n      setState({\r\n        ...state,\r\n        [e.target.id]: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const updateClass = async() => {\r\n      await fetch('/api/classes/'+ grade.id, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(state)\r\n      }).then(resp => {\r\n        if (resp.ok) {\r\n          resp.json().then(data => {\r\n            setFlash({\r\n              message: data.class,\r\n              updated: \"class\",\r\n              type: \"SUCCESS_UPDATE\"\r\n            });\r\n            setUpdated(true);\r\n          })\r\n        } else {\r\n          resp.json().then(data => {\r\n            setFlash({\r\n              message: data.message,\r\n              updated: \"class\",\r\n              type: \"FAILED_UPDATE\"\r\n            });\r\n            setUpdated(true);\r\n          })\r\n        }\r\n      })\r\n    };\r\n    updateClass();\r\n  }\r\n\r\n  if (isUpdated) {\r\n    return <Redirect to={{\r\n      pathname: '/classes/' + grade.id,\r\n      state: flash\r\n    }}/>\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">\r\n        ...\r\n      </div>\r\n      <div className=\"row\">\r\n        <form onSubmit={handleSubmit} className=\"col s12 offset-m3\">\r\n          \r\n          <h5 className=\"grey-text text-darken-3\">Update Class: </h5>\r\n\r\n          <div className=\"text-h\">...</div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">class</i>\r\n              <label htmlFor=\"class\" className='active'>Class Name</label>\r\n              <input type=\"text\" id=\"class\" className=\"validate\" defaultValue={grade.class} onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row center\">\r\n              <div className=\"input-field col s6\">\r\n                <button className=\"btn blue lighten-1 waves-effect waves-light hoverable\">Update</button>\r\n              </div>\r\n          </div>\r\n            \r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Classes } from '../Classes/Classes';\r\nimport { Class } from '../Classes/Class';\r\nimport { CreateClass } from '../Classes/createClasses';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { UpdateClass } from '../Classes/updateClasses';\r\n\r\n\r\nexport const ClassesLinks = () => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/classes' component={Classes} />\r\n      <Route exact path='/classes/create' component={CreateClass} />\r\n      <Route exact path='/classes/:id' component={Class} />\r\n      <Route exact path='/classes/:id/update' component={UpdateClass} />\r\n    </Switch>\r\n  )\r\n}","import React, {useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nexport const Schools = (props) => {\r\n  const flash = props.history.location.state;\r\n  const [schools, setSchools] = useState();\r\n  const [createSchools, setCreateSchools] = useState();\r\n  const [error, setError] = useState({\r\n    error: null,\r\n    message: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch('/api/schools', {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      }\r\n    }).then(resp => {\r\n      if (resp.ok) {\r\n        resp.json().then(data => {\r\n          setSchools(data.schools)\r\n        })\r\n      } else {\r\n        resp.json().then(data => {\r\n          setError({\r\n            error: data.error,\r\n            message: data.message \r\n          })\r\n        })\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n  const handleCreate = (e) => {\r\n    e.preventDefault();\r\n    setCreateSchools(true);\r\n  }\r\n\r\n  const flashRender = () => {\r\n    if (flash.type === 'SUCCESS_DELETION') {\r\n      return (\r\n        <div className=\"blue lighten-3 card-panel red-text text-darken-2\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    };\r\n    if (flash.type === 'SUCCESS_CREATION') {\r\n      return (\r\n        <div className=\"green lighten-3 card-panel blue-text text-darken-2\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    };\r\n    if (flash.type === 'NOT_FOUND') {\r\n      return (\r\n        <div className=\"yellow lighten-2 card-panel blue-text text-darken-3\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const schools_list = schools ? (schools.map(school => {\r\n    return (\r\n      <div className=\"card grey lighten-3 z-depth-1 hoverable\" key={school.id}>\r\n        <Link to={'/schools/'+ school.id} className='black-text'>\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">\r\n              <h5>{school.name}</h5>\r\n            </span>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <p className=\"col\">Email: {school.email}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    )\r\n  })) : (\r\n    <div className=\"progress\">\r\n      <div className=\"indeterminate\" />\r\n    </div>\r\n  )\r\n\r\n  const error_view = (\r\n    <div className=\"card\">\r\n      <div className=\"card-content center\">\r\n         <div className=\"card-title\">{error.message} ({error.error})</div>\r\n      </div>\r\n    </div>\r\n  ) \r\n\r\n  const view = error.error ? (error_view) : (schools_list)\r\n\r\n\r\n  const flash_view = flash ? (flashRender()) : null;\r\n\r\n  if (createSchools) {\r\n    return <Redirect to={{\r\n      pathname: '/schools/create'\r\n    }} />\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">\r\n        ...\r\n      </div>\r\n      <div className=\"container\">\r\n        {flash_view}\r\n      </div>\r\n      <div className=\"container\">\r\n      <button onClick={handleCreate} className=\"right waves-effect waves-light btn green blue hoverable\">Create</button>\r\n        <h4 className=''>Schools:</h4>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-6\">\r\n            <div className=\"text-h\">...</div>\r\n            {view}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\n\r\nexport const School = (props) => {\r\n  const flashMessage = props.history.location.state;\r\n  const [school, setSchool] = useState();\r\n\r\n  const [updatePage, setUpdatePage] = useState();\r\n  const [isDeleted, setIsDeleted] = useState();\r\n  const [notFound, setNotFound] = useState();\r\n\r\n  const [flash, setFlash] = useState();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/schools/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      }\r\n    }).then(resp => {\r\n      resp.json().then(data => {\r\n        if (resp.ok){\r\n          setSchool(data.school)\r\n        } else {\r\n          setFlash({\r\n            message: data.message,\r\n            updated: \"school\",\r\n            type: \"NOT_FOUND\"\r\n          });\r\n          setNotFound(true)\r\n        }\r\n      })\r\n    });\r\n  }, [id])\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n\r\n  const handleDeleteButton = (e) => {\r\n    e.preventDefault();\r\n    const deleteSchool = async() => {\r\n      await fetch(`/api/schools/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          // console.log(data);\r\n          setFlash({\r\n            'message': data.school,\r\n            'type': 'SUCCESS_DELETION'\r\n          });\r\n          setIsDeleted(true);\r\n        })\r\n      })\r\n    };\r\n    deleteSchool();\r\n  }\r\n\r\n  const handleUpdateButton = (e) => {\r\n    e.preventDefault();\r\n    // console.log('Update');\r\n    setUpdatePage(true);\r\n  }\r\n\r\n  const flashRender = () => {\r\n    if (flashMessage.type === 'SUCCESS_UPDATE') {\r\n      return (\r\n        <div className=\"green lighten-3 card-panel blue-text text-darken-2\">\r\n          {flashMessage.message}\r\n        </div>\r\n      )\r\n    }\r\n    if (flashMessage.type === 'FAILED_UPDATE') {\r\n      return (\r\n        <div className=\"red lighten-1 card-panel black-text text-darken-2\">\r\n          {flashMessage.message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  if (updatePage){\r\n    return <Redirect to={{\r\n      pathname: '/schools/'+id+'/update',\r\n      state: school\r\n      }}/>\r\n  }\r\n\r\n  if (isDeleted){\r\n    return <Redirect to={{\r\n      pathname: '/schools',\r\n      state: flash\r\n    }}/>\r\n  }\r\n\r\n  if (notFound){\r\n    return <Redirect to={{\r\n      pathname: '/schools',\r\n      state: flash\r\n    }} />\r\n  }\r\n\r\n  const loadManager = () => {\r\n    if (school.manager && school.manager[0]) {\r\n      return(\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Manager ID:</th>\r\n              <th>Name:</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>#{school.manager[0].id}</td>\r\n              <td>{school.manager[0].full_name}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      )\r\n    } else {\r\n      return(\r\n        <div className=\"center\"><strong>No Manager Assigned</strong></div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const flash_view = flashMessage ? (\r\n    flashRender()\r\n  ) : null;\r\n\r\n  const school_view = school ? (\r\n      <div className=\"card grey lighten-2 z-depth-2\">\r\n        <div className=\"card-content\">\r\n          <span className=\"title\">\r\n            <h5><strong>School:</strong> {school.name}</h5>\r\n          </span>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">School's Information:</span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>School ID:</th>\r\n                        <th>Email:</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>#{school.id}</td>\r\n                        <td>{school.email}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">Manager Information:</span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  {loadManager()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">\r\n                <h6><strong>Classes Information</strong></h6>\r\n              </span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"center\">Number of Classes:</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"center\">{school.classes.length}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card grey lighten-3 z-depth-2 hoverable\">\r\n            <div className=\"card-content\">\r\n              <span className=\"title\">\r\n                <h6><strong>Students Information</strong></h6>\r\n              </span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"center\">Number of Students:</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"center\">{school.students.length}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <div className=\"row\">\r\n            <div className=\"right\">\r\n              <div className=\"buttons\">\r\n                <button className=\"col waves-effect waves-light btn blue hoverable\" onClick={handleUpdateButton}>Update</button>\r\n                <button className=\"ml-5 col waves-effect waves-light btn modal-trigger red hoverable\" onClick={handleDeleteButton}>Delete</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div className=\"progress\">\r\n        <div className=\"indeterminate\"/>\r\n      </div>\r\n    )\r\n\r\n  return(\r\n    <div className=\"container\">\r\n    <div className=\"container text-h\">\r\n      ...\r\n    </div>\r\n      <div className=\"container\">\r\n        {flash_view}\r\n      </div>\r\n      <div className=\"container center\">\r\n        {school_view}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport const CreateSchool = () => {\r\n  const [state, setState] = useState();\r\n  const [flash, setFlash] = useState();\r\n  const [isCreated, setCreated] = useState();\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n  \r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.value) {\r\n      setState({\r\n        ...state,\r\n        [e.target.id]: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const createSchool = async() => {\r\n      await fetch('/api/schools', {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(state)\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          setFlash({\r\n            message: data.school,\r\n            created: \"school\",\r\n            type: \"SUCCESS_CREATION\"\r\n          })\r\n          setCreated(true);\r\n        })\r\n      })\r\n    };\r\n    createSchool();\r\n  }\r\n\r\n  if (isCreated){\r\n    return <Redirect to={{\r\n      pathname: '/schools',\r\n      state: flash\r\n    }}/>\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">\r\n        ...\r\n      </div>\r\n      <div className=\"row\">\r\n        <form onSubmit={handleSubmit} className=\"col s12 offset-m3\">\r\n          \r\n          <h5 className=\"grey-text text-darken-3\">Create School: </h5>\r\n\r\n          <div className=\"text-h\">...</div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">class</i>\r\n              <label htmlFor=\"name\">School's Name</label>\r\n              <input required='required' type=\"text\" id=\"name\" className=\"validate\" onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">class</i>\r\n              <label htmlFor=\"email\">School's Email</label>\r\n              <input required='required' type=\"email\" id=\"email\" className=\"validate\" onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row center\">\r\n              <div className=\"input-field col s6\">\r\n                <button className=\"btn green lighten-1 waves-effect waves-light hoverable\">Create</button>\r\n              </div>\r\n          </div>\r\n            \r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport const UpdateSchool = (props) => {\r\n  const school = props.history.location.state;\r\n  const [state, setState] = useState(school);\r\n  const [flash, setFlash] = useState();\r\n  const [isUpdated, setUpdated] = useState();\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.value) {\r\n      setState({\r\n        ...state,\r\n        [e.target.id]: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const updateSchool = async() => {\r\n      await fetch('/api/schools/'+ school.id, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(state)\r\n      }).then(resp => {\r\n        if (resp.ok) {\r\n          resp.json().then(data => {\r\n            setFlash({\r\n              message: data.school,\r\n              updated: \"school\",\r\n              type: \"SUCCESS_UPDATE\"\r\n            })\r\n            setUpdated(true);\r\n          })\r\n        } else {\r\n          resp.json().then(data => {\r\n            setFlash({\r\n              message: data.message,\r\n              updated: \"school\",\r\n              type: \"FAILED_UPDATE\"\r\n            })\r\n            setUpdated(true);\r\n          })\r\n        }\r\n      })\r\n    };\r\n    updateSchool();\r\n  }\r\n\r\n  if (isUpdated) {\r\n    return <Redirect to={{\r\n      pathname: '/schools/' + school.id,\r\n      state: flash\r\n    }}/>\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">\r\n        ...\r\n      </div>\r\n      <div className=\"row\">\r\n        <form onSubmit={handleSubmit} className=\"col s12 offset-m3\">\r\n          \r\n          <h5 className=\"grey-text text-darken-3\">Update School: </h5>\r\n\r\n          <div className=\"text-h\">...</div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">school</i>\r\n              <label htmlFor=\"name\" className='active'>School's Name</label>\r\n              <input type=\"text\" id=\"name\" className=\"validate\" defaultValue={school.name} onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">email</i>\r\n              <label htmlFor=\"email\" className='active'>School's Email</label>\r\n              <input disabled type=\"email\" id=\"email\" className=\"validate\" defaultValue={school.email} onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row center\">\r\n              <div className=\"input-field col s6\">\r\n                <button className=\"btn blue lighten-1 waves-effect waves-light hoverable\">Update</button>\r\n              </div>\r\n          </div>\r\n            \r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Schools } from '../Schools/Schools';\r\nimport { School } from '../Schools/School';\r\nimport { CreateSchool } from '../Schools/createSchools';\r\nimport { UpdateSchool } from '../Schools/updateSchools';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n\r\nexport const SchoolsLinks = () => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/schools' component={Schools} />\r\n      <Route exact path='/schools/create' component={CreateSchool} />\r\n      <Route exact path='/schools/:id' component={School} />\r\n      <Route exact path='/schools/:id/update' component={UpdateSchool} />\r\n    </Switch>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nexport const Requests = (props) => {\r\n  const flash = props.history.location.state\r\n  const [requests, setRequests] = useState();\r\n  const [createRequests, setCreateRequests] = useState();\r\n  const [error, setError] = useState({\r\n    error: null,\r\n    message: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch('/api/requests', {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      }\r\n    }).then(resp => {\r\n      if (resp.ok) {\r\n        resp.json().then(data => {\r\n          setRequests(data.requests)\r\n        })\r\n      } else {\r\n        resp.json().then(data => {\r\n          setError({\r\n            error: data.error,\r\n            message: data.message \r\n          })\r\n        })\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n  const handleCreate = (e) => {\r\n    e.preventDefault();\r\n    setCreateRequests(true);\r\n  }\r\n\r\n  const flashRender = () => {\r\n    if (flash.type === 'SUCCESS_DELETION') {\r\n      return (\r\n        <div className=\"blue lighten-3 card-panel red-text text-darken-2\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    };\r\n    if (flash.type === 'SUCCESS_CREATION') {\r\n      return (\r\n        <div className=\"green lighten-3 card-panel blue-text text-darken-2\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    };\r\n    if (flash.type === 'NOT_FOUND') {\r\n      return (\r\n        <div className=\"yellow lighten-2 card-panel blue-text text-darken-3\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const checkStatus = (status) => {\r\n\r\n    if (status == 'open'){\r\n      return (\r\n        <strong className=\"blue-text text-darken-2\">{status.toUpperCase()}</strong>\r\n      )\r\n    } else if (status == 'awaits') {\r\n      return (\r\n        <strong className=\"yellow-text text-darken-2\">{status.toUpperCase()}</strong>\r\n      )\r\n    } else if (status == 'denied') {\r\n      return (\r\n        <strong className=\"red-text text-darken-2\">{status.toUpperCase()}</strong>\r\n      )\r\n    } else if (status == 'closed') {\r\n      return (\r\n        <strong className=\"black-text text-darken-2\">{status.toUpperCase()}</strong>\r\n      )\r\n    } else if (status == 'accepted') {\r\n      return (\r\n        <strong className=\"green-text text-darken-2\">{status.toUpperCase()}</strong>\r\n      )\r\n    }\r\n  }\r\n\r\n  const requests_list = requests ? (requests.map(req => {\r\n    return (\r\n      <div className=\"card grey lighten-3 z-depth-1 hoverable\" key={req.id}>\r\n        <Link to={'/requests/' + req.id} className=\"black-text\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">\r\n              <h5>\r\n              <strong>Request</strong>(#{req.id})\r\n              </h5>\r\n            </span>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <p className=\"col\">User ID: #{req.user_id}</p>\r\n                <p className=\"col\">Status: {checkStatus(req.status)}</p>\r\n              </div>\r\n              <div className=\"row\">\r\n                <p className=\"col\">Request Date: {req.date}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    )\r\n  })) : (\r\n    <div className=\"progress\">\r\n      <div className=\"indeterminate\" />\r\n    </div>\r\n  )\r\n\r\n  const error_view = (\r\n    <div className=\"card\">\r\n      <div className=\"card-content center\">\r\n         <div className=\"card-title\">{error.message} ({error.error})</div>\r\n      </div>\r\n    </div>\r\n  ) \r\n\r\n  const view = error.error ? (error_view) : (requests_list)\r\n\r\n\r\n  const flash_view = flash ? (flashRender()) : null;\r\n\r\n  if (createRequests) {\r\n    return <Redirect to={{\r\n      pathname: '/requests/create'\r\n    }} />\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">\r\n        ...\r\n      </div>\r\n      <div className=\"container\">\r\n        {flash_view}\r\n      </div>\r\n      <div className=\"container\">\r\n      <button onClick={handleCreate} className=\"right waves-effect waves-light btn green blue hoverable\">Create</button>\r\n        <h4 className=''>Requests:</h4>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-6\">\r\n            <div className=\"text-h\">...</div>\r\n            {view}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\n\r\nexport const Request = (props) => {\r\n  const flashMessage = props.history.location.state;\r\n  const [request, setRequest] = useState();\r\n\r\n  const [updatePage, setUpdatePage] = useState();\r\n  const [reviewPage, setReviewPage] = useState();\r\n  const [isDeleted, setIsDeleted] = useState();\r\n  const [notFound, setNotFound] = useState();\r\n\r\n  const [flash, setFlash] = useState();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/requests/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      }\r\n    }).then(resp => {\r\n      resp.json().then(data => {\r\n        if (resp.ok){\r\n          setRequest(data.request)\r\n        } else {\r\n          setFlash({\r\n            message: data.message,\r\n            updated: \"request\",\r\n            type: \"NOT_FOUND\"\r\n          });\r\n          setNotFound(true)\r\n        }\r\n      })\r\n    });\r\n  }, [id])\r\n\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n  const handleDeleteButton = (e) => {\r\n    e.preventDefault();\r\n    const deleteRequest = async() => {\r\n      await fetch(`/api/requests/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          // console.log(data);\r\n          setFlash({\r\n            'message': data.request,\r\n            'type': 'SUCCESS_DELETION'\r\n          });\r\n          setIsDeleted(true);\r\n        })\r\n      })\r\n    };\r\n    deleteRequest();\r\n  }\r\n\r\n  const handleUpdateButton = (e) => {\r\n    e.preventDefault();\r\n    // console.log('Update');\r\n    setUpdatePage(true);\r\n  }\r\n\r\n  const handleReviewButton = (e) => {\r\n    e.preventDefault();\r\n    setReviewPage(true);\r\n  }\r\n\r\n  const flashRender = () => {\r\n    if (flashMessage.type === 'SUCCESS_UPDATION') {\r\n      return (\r\n        <div className=\"green lighten-3 card-panel blue-text text-darken-2\">\r\n          {flashMessage.message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  const requestRender = () => {\r\n    const body = JSON.parse(request.request);\r\n    if (request.request_type == 'CHANGE_USER_TYPE') {\r\n      return(\r\n        <div className=\"card-content\">\r\n          <span className=\"title\">Request Information:</span>\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>User ID:</th>\r\n                    <th>Full Name:</th>\r\n                    <th>Age:</th>\r\n                    <th>Email:</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>#{request.user_id}</td>\r\n                    <td>{body.full_name}</td>\r\n                    <td>{body.age}</td>\r\n                    <td>{body.email}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"row\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Phone:</th>\r\n                    <th>Current Type:</th>\r\n                    <th>Switch Type:</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{body.phone || \"()\"}</td>\r\n                    <td>{body.type}</td>\r\n                    <td>{body.switchType}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const checkStatus = () => {\r\n    if (request.status == 'open'){\r\n      return (\r\n        <strong className=\"blue-text text-darken-2\">{request.status.toUpperCase()}</strong>\r\n      )\r\n    } else if (request.status == 'awaits') {\r\n      return (\r\n        <strong className=\"yellow-text text-darken-2\">{request.status.toUpperCase()}</strong>\r\n      )\r\n    } else if (request.status == 'denied') {\r\n      return (\r\n        <strong className=\"red-text text-darken-2\">{request.status.toUpperCase()}</strong>\r\n      )\r\n    } else if (request.status == 'closed') {\r\n      return (\r\n        <strong className=\"black-text text-darken-2\">{request.status.toUpperCase()}</strong>\r\n      )\r\n    } else if (request.status == 'accepted') {\r\n      return (\r\n        <strong className=\"green-text text-darken-2\">{request.status.toUpperCase()}</strong>\r\n      )\r\n    }\r\n  }\r\n\r\n  const setRequestBody = () => {\r\n    const body = JSON.parse(request.request);\r\n    if (request.request_type == 'CHANGE_USER_TYPE') {\r\n      return(\r\n          <div className=\"card-panel grey lighten-3\">\r\n            <p>\r\n              <b>\r\n              User ( #{request.user_id} ) with Email: ( {body.email} ) has requested\r\n              A User-Type switch from ' <i className='grey-text text-darken-2'>{body.type}</i> ' To ' <i className='grey-text text-darken-2'>{body.switchType}</i> '.\r\n              </b>\r\n            </p>\r\n          </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  if (updatePage){\r\n    return <Redirect to={{\r\n      pathname: '/requests/'+id+'/update',\r\n      state: request\r\n      }}/>\r\n  }\r\n\r\n  if (reviewPage){\r\n    return <Redirect to={{\r\n      pathname: '/requests/'+id+'/review',\r\n      state: request\r\n      }}/>\r\n  }\r\n\r\n  if (isDeleted){\r\n    return <Redirect to={{\r\n      pathname: '/requests',\r\n      state: flash\r\n    }}/>\r\n  }\r\n\r\n  if (notFound){\r\n    return <Redirect to={{\r\n      pathname: '/requests',\r\n      state: flash\r\n    }} />\r\n  }\r\n\r\n  const flash_view = flashMessage ? (\r\n    flashRender()\r\n  ) : null;\r\n\r\n  const request_view = request ? (\r\n    <div className=\"card grey lighten-2 z-depth-2 hoverable\">\r\n      <div className=\"card-content\">\r\n        <div className=\"card-title\">\r\n          <span className=\"title\">\r\n            <h5><strong>Request ID</strong> #{request.id}</h5>\r\n          </span>\r\n          <div className=\"row\">\r\n            <div className=\"right\">\r\n              <div className=\"buttons\">\r\n                <button className=\"col waves-effect waves-light btn orange hoverable\" onClick={handleReviewButton}>Review</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card grey lighten-3 z-depth-2\">\r\n          {requestRender()}\r\n        </div>\r\n        <div className=\"card grey lighten-3 z-depth-2\">\r\n          <div className=\"card-content\">\r\n            <span className=\"title\"><strong>Request Body:</strong></span>\r\n            <div className=\"card-body\">\r\n              {setRequestBody()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card grey lighten-3 z-depth-2\">\r\n          <div className=\"card-content\">\r\n            <span className=\"title\">Request Status:</span>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Date:</th>\r\n                      <th>Status:</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{request.date}</td>\r\n                      <td>{checkStatus()}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-action\">\r\n        <div className=\"row\">\r\n          <div className=\"right\">\r\n            <div className=\"buttons\">\r\n              <button className=\"col waves-effect waves-light btn blue hoverable\" onClick={handleUpdateButton}>Update</button>\r\n              <button className=\"ml-5 col waves-effect waves-light btn red hoverable\" onClick={handleDeleteButton}>Delete</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"progress\">\r\n      <div className=\"indeterminate\" />\r\n    </div>\r\n  );\r\n\r\n  return(\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">...</div>\r\n      <div className=\"container\">\r\n        {flash_view}\r\n      </div>\r\n      <div className=\"container center\">\r\n        {request_view}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const CreateRequest = () => {\r\n  const [state, setState] = useState();\r\n\r\n  const [choice, setChoice] = useState();\r\n\r\n  const [flash, setFlash] = useState();\r\n  const [isCreated, setCreated] = useState();\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.id == 'choice') {\r\n      setChoice(e.target.value);\r\n    } else {\r\n      \r\n      if (e.target.value) {\r\n        setState({\r\n          ...state,\r\n          [e.target.id]: e.target.value\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const createRequest = async() => {\r\n      await fetch('/api/requests', {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(state)\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          setFlash({\r\n            message: data.request,\r\n            created: \"request\",\r\n            type: \"SUCCESS_CREATION\"\r\n          })\r\n          setCreated(true);\r\n        })\r\n      })\r\n    };\r\n    createRequest();\r\n  }\r\n\r\n  if (isCreated) {\r\n    return <Redirect to={{\r\n      pathname: '/requests',\r\n      state: flash\r\n    }} />\r\n  }\r\n\r\n  const requestsOption = () => {\r\n    if (choice === \"CHANGE_TYPE\"){\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"container text-h\">...</div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">account_circle</i>\r\n              <label htmlFor=\"full_name\">Full Name</label>\r\n              <input required='required' type=\"text\" id=\"full_name\" className=\"validate\" onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">accessibility</i>\r\n              <label htmlFor=\"age\">Age</label>\r\n              <input required='required' type=\"text\" maxLength='3' id=\"age\" className=\"validate\" onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">phone</i>\r\n              <label htmlFor=\"phone\">Phone</label>\r\n              <input type=\"text\" id=\"phone\" className='validate'  onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <label htmlFor=\"to_type\" />\r\n              <select name=\"types\" id=\"to_type\" required='required' className=\"browser-default\" onChange={handleChange}>\r\n                <option value=\"\" disabled selected>Choose A New Type</option>\r\n                <option value=\"student\">Student</option>\r\n                <option value=\"teacher\">Teacher</option>\r\n                <option value=\"manager\">Manager</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row center\">\r\n            <div className=\"input-field col s6\">\r\n              <button className=\"btn green lighten-1 waves-effect waves-light hoverable\">Create</button>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">...</div>\r\n      <div className=\"row\">\r\n        <form onSubmit={handleSubmit} className=\"col s12 offset-m3\">\r\n\r\n          <h5 className=\"grey-text text-darken-3\">Create Request:</h5>\r\n\r\n          <div className=\"text-h\">...</div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <label htmlFor=\"choice\"/>\r\n              <select name=\"choices\" id=\"choice\" required='required' className='browser-default' onChange={handleChange}>\r\n                <option value=\"\" selected disabled>Choose A Request Type</option>\r\n                <option value=\"CHANGE_TYPE\">Change User Type</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {requestsOption()}\r\n\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const UpdateRequest = (props) => {\r\n  const currentRequest = props.history.location.state;\r\n\r\n  const [state, setState] = useState();\r\n  const [choice, setChoice] = useState();\r\n\r\n  const [flash, setFlash] = useState();\r\n  const [isUpdated, setUpdated] = useState();\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.id == \"choice\") {\r\n      setChoice(e.target.value)\r\n    } else {\r\n\r\n      if (e.target.value) {\r\n        setState({\r\n          ...state,\r\n          [e.target.id]: e.target.value\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const updateRequest = async() => {\r\n      await fetch('/api/requests'+currentRequest.id, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(state)\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          setFlash({\r\n            message: data.request,\r\n            updated: \"request\",\r\n            type: \"SUCCESS_UPDATION\"\r\n          })\r\n          setUpdated(true);\r\n        })\r\n      })\r\n    };\r\n    updateRequest();\r\n  }\r\n\r\n  if (isUpdated) {\r\n    return <Redirect to={{\r\n      pathname: '/requests/'+currentRequest.id,\r\n      state: flash\r\n    }} />\r\n  }\r\n\r\n  const requestsOption = () => {\r\n    const currentBody = JSON.parse(currentRequest.request);\r\n    if ( !choice && currentRequest.request_type === \"CHANGE_USER_TYPE\" || choice === \"CHANGE_TYPE\"){\r\n      return (\r\n        <div className=\"\">\r\n          <div className=\"container text-h\">...</div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">account_circle</i>\r\n              <label className=\"active\" htmlFor=\"full_name\">Full Name</label>\r\n              <input required='required' type=\"text\" id=\"full_name\" className=\"validate\" defaultValue={currentBody.full_name} onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">accessibility</i>\r\n              <label className=\"active\" htmlFor=\"age\">Age</label>\r\n              <input required='required' type=\"text\" maxLength='3' id=\"age\" className=\"validate\" defaultValue={currentBody.age} onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <i className=\"material-icons prefix\">phone</i>\r\n              <label className=\"active\" htmlFor=\"phone\">Phone</label>\r\n              <input type=\"text\" id=\"phone\" className='validate' defaultValue={currentBody.phone}  onChange={handleChange}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <label className=\"active\" htmlFor=\"to_type\" />\r\n              <select name=\"types\" id=\"to_type\" required='required' className=\"browser-default\" defaultValue={currentBody.switchType} onChange={handleChange}>\r\n                <option value=\"\" disabled selected>Choose A New Type</option>\r\n                <option value=\"student\">Student</option>\r\n                <option value=\"teacher\">Teacher</option>\r\n                <option value=\"manager\">Manager</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row center\">\r\n            <div className=\"input-field col s6\">\r\n              <button className=\"btn blue lighten-1 waves-effect waves-light hoverable\">Update</button>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">...</div>\r\n\r\n      <div className=\"row\">\r\n        <form onSubmit={handleSubmit} className=\"col s12 offset-m3\">\r\n          <h5 className=\"grey-text text-darken-3\">Update Request:</h5>\r\n\r\n          <div className=\"container text-h\">...</div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <label htmlFor=\"choice\"/>\r\n              <select name=\"choices\" id=\"choice\" required='required' className='browser-default' defaultValue=\"CHANGE_TYPE\" onChange={handleChange}>\r\n                <option value=\"\" selected disabled>Choose A Request Type</option>\r\n                <option value=\"CHANGE_TYPE\">Change User Type</option>\r\n                <option value=\"CHANGE_SCHOOL\">Change School</option>\r\n                <option value=\"CHANGE_CLASS\">Change Class</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {requestsOption()}\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n  \r\n}","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const ReviewRequest = (props) => {\r\n  const currentRequest = props.history.location.state;\r\n\r\n  const [state, setState] = useState(currentRequest);\r\n  const [respond, setRespond] = useState();\r\n  \r\n  const [flash, setFlash] = useState();\r\n  const [isCompleted, setCompleted] = useState();\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.id == \"status\") {\r\n      setRespond(e.target.value)\r\n    }\r\n\r\n    if (e.target.value) {\r\n      setState({\r\n        ...state,\r\n        [e.target.id]: e.target.value\r\n      })\r\n    \r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const reviewRequest = async() => {\r\n      await fetch('/api/requests/' + currentRequest.id + \"/review\", {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(state)\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          setFlash({\r\n            message: data.request,\r\n            updated: \"request\",\r\n            type: \"SUCCESS_UPDATION\"\r\n          })\r\n          setCompleted(true);\r\n        })\r\n      })\r\n    };\r\n    reviewRequest();\r\n  }\r\n\r\n  if (isCompleted) {\r\n    return <Redirect to={{\r\n      pathname: '/requests',\r\n      state: flash\r\n    }} />\r\n  }\r\n\r\n  const statusOptions = () => {\r\n\r\n    if (respond) {\r\n      if (respond === \"accepted\") {\r\n        return(\r\n          <div>\r\n            <div className=\"row\">\r\n              <div className=\"input-field col s6\">\r\n                <label htmlFor=\"completed\"/>\r\n                <select name=\"completed\" id=\"completed\" required='required' className='browser-default' defaultValue=\"CHANGE_TYPE\" onChange={handleChange}>\r\n                  <option value=\"\" selected disabled>Choose A Status</option>\r\n                  <option value=\"On-Progress\">On-Progress</option>\r\n                  <option value=\"Completed\">Completed</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      } else if (respond === \"awaits\") {\r\n        return(\r\n          <div>\r\n            <div className=\"row\">\r\n              <div className=\"input-field col s6\">\r\n                <label htmlFor=\"completed\"/>\r\n                <select name=\"completed\" id=\"completed\" required='required' className='browser-default' defaultValue=\"CHANGE_TYPE\" onChange={handleChange}>\r\n                  <option value=\"\" selected disabled>Choose A Status</option>\r\n                  <option value=\"On-Progress\">On-Progress</option>\r\n                  <option value=\"Further-Review\">Needs Further Review</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"input-field col s6\">\r\n                <label htmlFor=\"reason\">Reason</label>\r\n                <textarea name=\"reason\" id=\"reason\" className=\"materialize-textarea\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      } else if (respond === \"denied\") {\r\n        return(\r\n          <div>\r\n            <div className=\"row\">\r\n              <div className=\"input-field col s6\">\r\n                <label htmlFor=\"completed\"/>\r\n                <select name=\"completed\" id=\"completed\" required='required' className='browser-default' defaultValue=\"CHANGE_TYPE\" onChange={handleChange}>\r\n                  <option value=\"\" selected disabled>Choose A Status</option>\r\n                  <option value=\"Completed\">Completed</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"input-field col s6\">\r\n                <label htmlFor=\"reason\">Reason</label>\r\n                <textarea name=\"reason\" id=\"reason\" className=\"materialize-textarea\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      } else if (respond === \"closed\") {\r\n        return(\r\n          <div>\r\n            <div className=\"row\">\r\n              <div className=\"input-field col s6\">\r\n                <label htmlFor=\"completed\"/>\r\n                <select name=\"completed\" id=\"completed\" className='browser-default' defaultValue=\"CHANGE_TYPE\" onChange={handleChange}>\r\n                  <option value=\"\" selected disabled>Choose A Status</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"input-field col s6\">\r\n                <label htmlFor=\"reason\">Reason</label>\r\n                <textarea name=\"reason\" id=\"reason\" className=\"materialize-textarea\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  } \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">...</div>\r\n\r\n      <div className=\"row\">\r\n        <form onSubmit={handleSubmit} className=\"col s12 offset-m3\">\r\n\r\n          <h5 className=\"grey-text text-darken-3\">Review Request: </h5>\r\n\r\n          <div className=\"container text-h\">...</div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s6\">\r\n              <label htmlFor=\"status\"/>\r\n              <select name=\"responses\" id=\"status\" required='required' className='browser-default' onChange={handleChange}>\r\n                <option value=\"\" selected disabled>Choose A Respond</option>\r\n                <option value=\"accepted\">Accept</option>\r\n                <option value=\"awaits\">Await</option>\r\n                <option value=\"denied\">Deny</option>\r\n                <option value=\"closed\">Close</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {statusOptions()}\r\n\r\n          <div className=\"row center\">\r\n            <div className=\"input-field col s6\">\r\n              <button className=\"btn orange lighten-1 waves-effect waves-light hoverable\">Submit</button>\r\n            </div>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { Requests } from '../Requests/Requests';\r\nimport { Request } from '../Requests/Request';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { CreateRequest } from '../Requests/createRequests';\r\nimport { UpdateRequest } from '../Requests/updateRequests';\r\nimport { ReviewRequest } from '../Requests/respToRequest';\r\n\r\n\r\nexport const RequestsLinks = () => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/requests' component={Requests} />\r\n      <Route exact path='/requests/create' component={CreateRequest} />\r\n      <Route exact path='/requests/:id' component={Request} />\r\n      <Route exact path='/requests/:id/update' component={UpdateRequest} />\r\n      <Route exact path='/requests/:id/review' component={ReviewRequest} />\r\n    </Switch>\r\n  )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\n\r\nexport const LoginUser = () => {\r\n\r\n  const [cred, setCred] = useState();\r\n  const [state, setState] = useState({current_user: null});\r\n  const [errors, setErrors] = useState();\r\n  const [flash, setFlash] = useState();\r\n  const [fetched, setFetched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged-in.\r\n    const data = localStorage.userInfo\r\n    if (data) {\r\n      setState(JSON.parse(data))\r\n    }\r\n    setFetched(true)\r\n  }, [])\r\n\r\n  const loadLoginPage = () => {\r\n    return (\r\n      <div className=\"container\">\r\n        <h4>Welcome !</h4>\r\n        <div className=\"container text-h\">...</div>\r\n        <div className=\"container\">\r\n          {viewErrors}\r\n        </div>\r\n        <form onSubmit={handleLogin} className=\"container\">\r\n\r\n          <h5 className=\"grey-text text-darken-2\">Sign In</h5>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 hoverable waves-effect waves-light\">Login</button>\r\n          </div>\r\n\r\n          <Link className=\"sm-text\" to=\"/register\">Don't have an account? Register.</Link>\r\n\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const viewErrors = errors ? (\r\n    <div className=\"red lighten-2 card-panel black-text text-darken-2\">\r\n      Error: {errors.message}\r\n    </div>\r\n  ) : null\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setCred({\r\n      ...cred,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    const login = async() => {\r\n      await fetch('/api/login', {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(cred)\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          if (resp.ok) {\r\n            setFlash({\r\n              message: data.user,\r\n              type: 'SUCCESS_LOGIN'\r\n            });\r\n            setState({\r\n              current_user: data.current_user\r\n            });\r\n          } else {\r\n            setErrors(data)\r\n          }\r\n        })\r\n      })\r\n    };\r\n    \r\n    login();\r\n    setFetched(true);\r\n  }\r\n\r\n  const addToLocalStore = () => {\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(state));\r\n  }\r\n\r\n  const redirectPage = () => {\r\n    // add current user to localStorage.\r\n    addToLocalStore();\r\n    return <Redirect to={{\r\n      pathname: '/',\r\n      state: flash\r\n    }} />\r\n  }\r\n\r\n\r\n  let is_user = () => {}\r\n  if (fetched) {\r\n    is_user = state.current_user ? (redirectPage) : (loadLoginPage)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container center\">\r\n      {is_user()}\r\n    </div>\r\n  )\r\n\r\n\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\n\r\nexport const RegisterUser = () => {\r\n\r\n  const [cred, setCred] = useState();\r\n  const [state, setState] = useState({current_user: null, registered: false})\r\n  const [fetched, setFetched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged-in.\r\n    const data = localStorage.userInfo\r\n    if (data) {\r\n      setState(JSON.parse(data))\r\n    }\r\n    setFetched(true)\r\n  }, [])\r\n\r\n  const loadRegisterPage = () => {\r\n    return (\r\n      <div className=\"container\">\r\n        <h4>Hi Newbie !</h4>\r\n        <div className=\"container text-h\">...</div>\r\n        <form onSubmit={handleRegister} className=\"container\">\r\n\r\n          <h5 className=\"grey-text text-darken-2\">Sign Up</h5>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"confirm_password\">Confirm Password</label>\r\n            <input type=\"password\" id=\"confirm_password\" onChange={handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 hoverable waves-effect waves-light\">Register</button>\r\n          </div>\r\n\r\n          <Link className=\"sm-text\" to=\"/login\">Already have an account? Login.</Link>\r\n\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setCred({\r\n      ...cred,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    const register = async() => {\r\n      await fetch('/api/register', {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(cred)\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          if (resp.ok) {\r\n            setState({\r\n              registered: true\r\n            });\r\n          } else {\r\n            console.log(data);\r\n          }\r\n        })\r\n      })\r\n    };\r\n\r\n    if (cred && cred.password === cred.confirm_password) {\r\n      register();\r\n      setFetched(true);\r\n    } else {\r\n      console.log('Password Fields Dont match')\r\n    }\r\n  };\r\n\r\n  const redirectPage = () => {\r\n    return <Redirect to=\"/login\" />\r\n  }\r\n\r\n  let is_user = () => {}\r\n  if (fetched) {\r\n    is_user = state.current_user || state.registered ? (redirectPage) : (loadRegisterPage)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container center\">\r\n      {is_user()}\r\n    </div>\r\n  )\r\n\r\n}","import React from 'react'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport { LoginUser } from '../Users/Login'\r\nimport { RegisterUser } from '../Users/Register'\r\n\r\n\r\nexport const UsersLinks = () => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/register' component={RegisterUser}/>\r\n      <Route exact path='/login' component={LoginUser} />\r\n    </Switch>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\n\r\n\r\n\r\nexport const SearchSystem = (props) => {\r\n  const flash = props.history.location.state;\r\n  const [state, setState] = useState({searchKey: 'all', search: '', searched: false});\r\n  const [results, setResults] = useState();\r\n\r\n  // Since this is the main page, we fetch the backend to see if the\r\n  // user is logged-in previously.\r\n  useEffect(() => {\r\n    if (!localStorage.userInfo && !localStorage.DidFetch) {\r\n      fetch('/api/current_user', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        }\r\n      }).then(resp => {\r\n        resp.json().then(data => {\r\n          if (resp.ok && data.current_user) {\r\n            localStorage.setItem(\r\n              \"userInfo\", JSON.stringify(data.current_user)\r\n              )\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  // Redirect User if Not Logged-In\r\n  if (!localStorage.userInfo) {\r\n    return <Redirect to=\"/login\"/>\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault()\r\n    setState({\r\n      ...state,\r\n      [e.target.id]: e.target.value,\r\n      searched: false\r\n    });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  const searchInput = async() => {\r\n    await fetch('/api/search', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n      body: JSON.stringify(state)\r\n    }).then(resp => {\r\n      resp.json().then(data => {\r\n        if (resp.ok) {\r\n          setResults(data.results)\r\n        } else {\r\n          console.log(data)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  /*\r\n  This Function Loads Results in Categories (Students, Teachers, etc..)\r\n  And Checks if it's Empty or Not (The methods used in this functions\r\n    are of a beginner not very ideal for production)\r\n  */\r\n  const loadAll = () => {\r\n    const loadStudents = results && results.students ? (\r\n      results.students.map(student => {\r\n      return(\r\n        <div key={student.id}>\r\n          <div className=\"container text-h\">...</div>\r\n          <div className=\"card grey lighten-3 z-depth-1 hoverable\">\r\n          <Link to={'/students/' + student.id} className='black-text'>\r\n            <div className=\"card-content\">\r\n              <span className=\"card-title\">\r\n                <h5>{student.full_name}</h5>\r\n              </span>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <p className=\"col\">Email: {student.email}</p>\r\n                  <p className=\"col\">Phone: {student.phone}</p>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <p className=\"col\">School: {student.school.name}</p>\r\n                  <p className=\"col\">Class: {student.class.class}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n        </div>\r\n      )\r\n    })) : null;\r\n  \r\n    const loadTeachers = results && results.teachers ? (\r\n      results.teachers.map(teacher => {\r\n      return(\r\n        <div key={teacher.id}>\r\n          <div className=\"container text-h\">...</div>\r\n          <div className=\"card grey lighten-3 z-depth-1 hoverable\" >\r\n            <Link to={'/teachers/' + teacher.id} className='black-text'>\r\n              <div className=\"card-content\">\r\n                <span className=\"card-title\">\r\n                  <h5>{teacher.full_name}</h5>\r\n                </span>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <p className=\"col\">Email: {teacher.email}</p>\r\n                    <p className=\"col\">Phone: {teacher.phone}</p>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <p className=\"col\">School: {teacher.school.name}</p>\r\n                    <p className=\"col\">Class: {teacher.class.class}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )\r\n    })) : null;\r\n  \r\n    const loadManagers = results && results.managers ? (\r\n      results.managers.map(manager => {\r\n      return(\r\n        <div key={manager.id}>\r\n          <div className=\"container text-h\">...</div>\r\n          <div className=\"card grey lighten-3 z-depth-1 hoverable\" >\r\n            <Link to={'/managers/' + manager.id} className='black-text'>\r\n              <div className=\"card-content\">\r\n                <span className=\"card-title\">\r\n                  <h5>{manager.full_name}</h5>\r\n                </span>\r\n                <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <p className=\"col\">Email: {manager.email}</p>\r\n                  <p className=\"col\">Phone: {manager.phone}</p>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <p className=\"col\">School: {manager.school.name}</p>\r\n                </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )\r\n    })) : null;\r\n  \r\n    const loadClassTeacher = (grade) => {\r\n      if (grade.teacher && grade.teacher[0]){\r\n        return(\r\n          <p className=\"col\">Teacher: {grade.teacher[0].full_name}</p>\r\n        )\r\n      } else {\r\n        return(\r\n          <p className=\"col\">Teacher: <strong>No Teacher Assigned</strong></p>\r\n        )\r\n      }\r\n    }\r\n  \r\n    const loadClasses = results && results.classes ? (\r\n      results.classes.map(grade => {\r\n        return (\r\n          <div key={grade.id}>\r\n            <div className=\"container text-h\">...</div>\r\n            <div className=\"card grey lighten-3 z-depth-1 hoverable\" >\r\n              <Link to={'/classes/'+ grade.id} className='black-text'>\r\n                <div className=\"card-content\">\r\n                  <span className=\"card-title\">\r\n                    <h5>{grade.class}</h5>\r\n                  </span>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      {loadClassTeacher(grade)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        )\r\n      })) : null;\r\n  \r\n    const loadSchools = results && results.schools ? (\r\n      results.schools.map(school => {\r\n        return (\r\n          <div key={school.id}>\r\n            <div className=\"container text-h\">...</div>\r\n            <div className=\"card grey lighten-3 z-depth-1 hoverable\" >\r\n              <Link to={'/schools/'+ school.id} className='black-text'>\r\n                <div className=\"card-content\">\r\n                  <span className=\"card-title\">\r\n                    <h5>{school.name}</h5>\r\n                  </span>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <p className=\"col\">Email: {school.email}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        )\r\n      })): null;\r\n\r\n    const renderStudents = () => {\r\n      if (loadStudents && loadStudents.length > 0) {\r\n        return (\r\n          <div className=\"container left\">\r\n            <h5>Students: </h5>\r\n            {loadStudents}\r\n          </div>\r\n        )\r\n      } else return null\r\n    }\r\n\r\n    const renderTeachers = () => {\r\n      if (loadTeachers && loadTeachers.length > 0) {\r\n        return (\r\n          <div className=\"container left\">\r\n            <h5>Teachers: </h5>\r\n            {loadTeachers}\r\n          </div>\r\n        )\r\n      } else return null\r\n    }\r\n\r\n    const renderManagers = () => {\r\n      if (loadManagers && loadManagers.length > 0) {\r\n        return (\r\n          <div className=\"container left\">\r\n            <h5>Managers: </h5>\r\n            {loadManagers}\r\n          </div>\r\n        )\r\n      } else return null\r\n    }\r\n\r\n    const renderClasses = () => {\r\n      if (loadClasses && loadClasses.length > 0) {\r\n        return (\r\n          <div className=\"container left\">\r\n            <h5>Classes: </h5>\r\n            {loadClasses}\r\n          </div>\r\n        )\r\n      } else return null\r\n    }\r\n\r\n    const renderSchools = () => {\r\n      if (loadSchools && loadSchools.length > 0) {\r\n        return (\r\n          <div className=\"container left\">\r\n            <h5>Schools: </h5>\r\n            {loadSchools}\r\n          </div>\r\n        )\r\n      } else return null\r\n    }\r\n\r\n    const checkNotEmpty = () => {\r\n      if (loadStudents && loadStudents.length > 0 ||\r\n        loadTeachers && loadTeachers.length > 0 ||\r\n        loadManagers && loadManagers.length > 0 ||\r\n        loadClasses && loadClasses.length > 0 ||\r\n        loadSchools && loadSchools.length > 0) {\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n    }\r\n\r\n    if (checkNotEmpty()) {\r\n      return(\r\n        <div className=\"ml-15\">\r\n          {renderStudents()}\r\n          {renderTeachers()}\r\n          {renderManagers()}\r\n          {renderClasses()}\r\n          {renderSchools()}\r\n        </div>\r\n      )\r\n    } else {\r\n      return(\r\n        <div className=\"container ml-15\">\r\n          <h6>No results</h6>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const loadResults = () => {\r\n    if (state.search) {\r\n      return(\r\n\r\n        <div className=\"container left\">\r\n          <h4><strong>Results: </strong></h4>\r\n\r\n          {loadAll()}\r\n\r\n        </div>\r\n      )\r\n    } else {return(null)}\r\n  }\r\n\r\n  const flashRender = () => {\r\n    if (flash.type === \"SUCCESS_LOGIN\") {\r\n      return (\r\n        <div className=\"green lighten-3 card-panel blue-text text-darken-2\">\r\n          {flash.message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const flash_view = flash ? flashRender() : null\r\n\r\n  if (state.search && !state.searched) {\r\n    searchInput();\r\n    setState({\r\n      ...state,\r\n      searched: true\r\n    });\r\n\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container text-h\">...</div>\r\n      <div className=\"container left\">{flash_view}</div>\r\n      <div className=\"container text-h\">...</div>\r\n      <form onSubmit={handleSubmit} className=\"center col s12\">\r\n        <div className=\"row\">\r\n          <div className=\"input-field col s8\">\r\n            <label htmlFor=\"search\">\r\n              Search For (Students, Classes, Teachers, Managers, Schools) Names\r\n            </label>\r\n            <input type=\"text\" id=\"search\" onChange={handleChange}/>\r\n          </div>\r\n          <div className=\"input-field col s2\">\r\n              <label htmlFor=\"searchKey\" />\r\n              <select name=\"searchKey\" id=\"searchKey\" required='required' className=\"browser-default\" onChange={handleChange}>\r\n                <option value=\"all\" defaultValue>All</option>\r\n                <option value=\"students\">Students</option>\r\n                <option value=\"teachers\">Teachers</option>\r\n                <option value=\"managers\">Managers</option>\r\n                <option value=\"classes\">Classes</option>\r\n                <option value=\"schools\">Schools</option>\r\n              </select>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {loadResults()}\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Navbar from './Components/Layout/Navbar';\nimport { StudentsLinks } from './Components/Links/studentsLinks';\nimport { TeachersLinks } from './Components/Links/teachersLinks';\nimport { ManagersLinks } from './Components/Links/managersLinks';\nimport { ClassesLinks } from './Components/Links/classesLinks';\nimport { SchoolsLinks } from './Components/Links/schoolsLinks';\nimport { RequestsLinks } from './Components/Links/requestsLinks';\nimport { UsersLinks } from './Components/Links/usersLinks';\nimport { SearchSystem } from './Components/SearchEngine/SearchE';\n\n\nclass App extends Component {\n  \n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Route exact path='/' component={SearchSystem}/>\n          <UsersLinks />\n          <TeachersLinks />\n          <StudentsLinks />\n          <ManagersLinks />\n          <ClassesLinks />\n          <SchoolsLinks />\n          <RequestsLinks />\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}